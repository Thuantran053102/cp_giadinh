{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.addPushTokenListener=addPushTokenListener;exports.removePushTokenSubscription=removePushTokenSubscription;var _expoModulesCore=require(\"expo-modules-core\");var _PushTokenManager=_interopRequireDefault(require(\"./PushTokenManager\"));var tokenEmitter=new _expoModulesCore.EventEmitter(_PushTokenManager.default);var newTokenEventName='onDevicePushToken';function addPushTokenListener(listener){var wrappingListener=function wrappingListener(_ref){var devicePushToken=_ref.devicePushToken;return listener({data:devicePushToken,type:_expoModulesCore.Platform.OS});};return tokenEmitter.addListener(newTokenEventName,wrappingListener);}function removePushTokenSubscription(subscription){tokenEmitter.removeSubscription(subscription);}","map":{"version":3,"sources":["../src/TokenEmitter.ts"],"names":[],"mappings":"8PAAA,kDAEA,4EAMA,GAAM,aAAY,CAAG,GAAI,8BAAJ,CAAiB,yBAAjB,CAArB,CACA,GAAM,kBAAiB,CAAG,mBAA1B,CAEM,QAAU,qBAAV,CAA+B,QAA/B,CAA0D,CAC9D,GAAM,iBAAgB,CAAG,QAAnB,iBAAmB,UAAG,gBAAH,MAAG,eAAH,OAEvB,SAAQ,CAAC,CAAE,IAAI,CAAE,eAAR,CAAyB,IAAI,CAAE,yBAAA,CAAS,EAAxC,CAAD,CAFe,EAAzB,CAGA,MAAO,aAAY,CAAC,WAAb,CAAyB,iBAAzB,CAA4C,gBAA5C,CAAP,CACD,CAEK,QAAU,4BAAV,CAAsC,YAAtC,CAAgE,CACpE,YAAY,CAAC,kBAAb,CAAgC,YAAhC,EACD","sourcesContent":["import { EventEmitter, Subscription, Platform } from 'expo-modules-core';\n\nimport PushTokenManager from './PushTokenManager';\nimport { DevicePushToken } from './Tokens.types';\n\nexport type PushTokenListener = (token: DevicePushToken) => void;\n\n// Web uses SyntheticEventEmitter\nconst tokenEmitter = new EventEmitter(PushTokenManager);\nconst newTokenEventName = 'onDevicePushToken';\n\nexport function addPushTokenListener(listener: PushTokenListener): Subscription {\n  const wrappingListener = ({ devicePushToken }) =>\n    // @ts-ignore: TS can't decide what Platform.OS is.\n    listener({ data: devicePushToken, type: Platform.OS });\n  return tokenEmitter.addListener(newTokenEventName, wrappingListener);\n}\n\nexport function removePushTokenSubscription(subscription: Subscription) {\n  tokenEmitter.removeSubscription(subscription);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}