{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.ProgressPie=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _react=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=require(\"react-native\");var _art=require(\"@react-native-community/art\");var _Circle=_interopRequireDefault(require(\"./Shapes/Circle\"));var _Sector=_interopRequireDefault(require(\"./Shapes/Sector\"));var _withAnimation=_interopRequireDefault(require(\"./withAnimation\"));var _excluded=[\"animated\",\"borderColor\",\"borderWidth\",\"children\",\"color\",\"progress\",\"rotation\",\"size\",\"style\",\"unfilledColor\"];function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var CIRCLE=Math.PI*2;var AnimatedSurface=_reactNative.Animated.createAnimatedComponent(_art.Surface);var AnimatedSector=_reactNative.Animated.createAnimatedComponent(_Sector.default);var styles=_reactNative.StyleSheet.create({container:{backgroundColor:'transparent',overflow:'hidden'}});var ProgressPie=function(_Component){(0,_inherits2.default)(ProgressPie,_Component);var _super=_createSuper(ProgressPie);function ProgressPie(){(0,_classCallCheck2.default)(this,ProgressPie);return _super.apply(this,arguments);}(0,_createClass2.default)(ProgressPie,[{key:\"render\",value:function render(){var _this$props=this.props,animated=_this$props.animated,borderColor=_this$props.borderColor,borderWidth=_this$props.borderWidth,children=_this$props.children,color=_this$props.color,progress=_this$props.progress,rotation=_this$props.rotation,size=_this$props.size,style=_this$props.style,unfilledColor=_this$props.unfilledColor,restProps=(0,_objectWithoutProperties2.default)(_this$props,_excluded);var Surface=rotation?AnimatedSurface:_art.Surface;var Shape=animated?AnimatedSector:_Sector.default;var angle=animated?_reactNative.Animated.multiply(progress,CIRCLE):progress*CIRCLE;var radius=size/2-borderWidth;var offset={top:borderWidth,left:borderWidth};return _react.default.createElement(_reactNative.View,(0,_extends2.default)({style:[styles.container,style]},restProps),_react.default.createElement(Surface,{width:size,height:size,style:rotation?{transform:[{rotate:rotation.interpolate({inputRange:[0,1],outputRange:['0deg','360deg']})}]}:undefined},unfilledColor?_react.default.createElement(_Circle.default,{radius:radius,offset:offset,fill:unfilledColor}):false,_react.default.createElement(Shape,{radius:radius,angle:angle,offset:offset,fill:color}),borderWidth?_react.default.createElement(_Circle.default,{radius:size/2,stroke:borderColor||color,strokeWidth:borderWidth}):false),children);}}]);return ProgressPie;}(_react.Component);exports.ProgressPie=ProgressPie;ProgressPie.propTypes={animated:_propTypes.default.bool,borderColor:_propTypes.default.string,borderWidth:_propTypes.default.number,color:_propTypes.default.string,children:_propTypes.default.node,progress:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.instanceOf(_reactNative.Animated.Value)]),rotation:_propTypes.default.instanceOf(_reactNative.Animated.Value),size:_propTypes.default.number,style:_propTypes.default.any,unfilledColor:_propTypes.default.string};ProgressPie.defaultProps={borderWidth:1,color:'rgba(0, 122, 255, 1)',progress:0,size:40};var _default=(0,_withAnimation.default)(ProgressPie,0.2);exports.default=_default;","map":{"version":3,"names":["CIRCLE","Math","PI","AnimatedSurface","Animated","createAnimatedComponent","ARTSurface","AnimatedSector","Sector","styles","StyleSheet","create","container","backgroundColor","overflow","ProgressPie","props","animated","borderColor","borderWidth","children","color","progress","rotation","size","style","unfilledColor","restProps","Surface","Shape","angle","multiply","radius","offset","top","left","transform","rotate","interpolate","inputRange","outputRange","undefined","Component","propTypes","PropTypes","bool","string","number","node","oneOfType","instanceOf","Value","any","defaultProps","withAnimation"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-progress/Pie.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { Surface as ARTSurface } from '@react-native-community/art';\n\nimport Circle from './Shapes/Circle';\nimport Sector from './Shapes/Sector';\nimport withAnimation from './withAnimation';\n\nconst CIRCLE = Math.PI * 2;\n\nconst AnimatedSurface = Animated.createAnimatedComponent(ARTSurface);\nconst AnimatedSector = Animated.createAnimatedComponent(Sector);\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    overflow: 'hidden',\n  },\n});\n\nexport class ProgressPie extends Component {\n  static propTypes = {\n    animated: PropTypes.bool,\n    borderColor: PropTypes.string,\n    borderWidth: PropTypes.number,\n    color: PropTypes.string,\n    children: PropTypes.node,\n    progress: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.instanceOf(Animated.Value),\n    ]),\n    rotation: PropTypes.instanceOf(Animated.Value),\n    size: PropTypes.number,\n    style: PropTypes.any,\n    unfilledColor: PropTypes.string,\n  };\n\n  static defaultProps = {\n    borderWidth: 1,\n    color: 'rgba(0, 122, 255, 1)',\n    progress: 0,\n    size: 40,\n  };\n\n  render() {\n    const {\n      animated,\n      borderColor,\n      borderWidth,\n      children,\n      color,\n      progress,\n      rotation,\n      size,\n      style,\n      unfilledColor,\n      ...restProps\n    } = this.props;\n\n    const Surface = rotation ? AnimatedSurface : ARTSurface;\n    const Shape = animated ? AnimatedSector : Sector;\n\n    const angle = animated\n      ? Animated.multiply(progress, CIRCLE)\n      : progress * CIRCLE;\n    const radius = size / 2 - borderWidth;\n    const offset = {\n      top: borderWidth,\n      left: borderWidth,\n    };\n\n    return (\n      <View style={[styles.container, style]} {...restProps}>\n        <Surface\n          width={size}\n          height={size}\n          style={\n            rotation\n              ? {\n                  transform: [\n                    {\n                      rotate: rotation.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                  ],\n                }\n              : undefined\n          }\n        >\n          {unfilledColor ? (\n            <Circle radius={radius} offset={offset} fill={unfilledColor} />\n          ) : (\n            false\n          )}\n          <Shape radius={radius} angle={angle} offset={offset} fill={color} />\n          {borderWidth ? (\n            <Circle\n              radius={size / 2}\n              stroke={borderColor || color}\n              strokeWidth={borderWidth}\n            />\n          ) : (\n            false\n          )}\n        </Surface>\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default withAnimation(ProgressPie, 0.2);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}