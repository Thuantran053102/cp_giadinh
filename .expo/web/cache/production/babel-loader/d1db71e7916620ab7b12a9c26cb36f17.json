{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useMergeRefs;var React=_interopRequireWildcard(require(\"react\"));var _mergeRefs=_interopRequireDefault(require(\"../mergeRefs\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function useMergeRefs(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return React.useMemo(function(){return _mergeRefs.default.apply(void 0,args);},[].concat(args));}","map":{"version":3,"names":["useMergeRefs","args","React","useMemo","mergeRefs"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-web/src/modules/useMergeRefs/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport * as React from 'react';\nimport mergeRefs from '../mergeRefs';\n\nexport default function useMergeRefs(\n  ...args: $ReadOnlyArray<React.ElementRef<any>>\n): (node: HTMLElement | null) => void {\n  return React.useMemo(\n    () => mergeRefs(...args),\n    // eslint-disable-next-line\n    [...args]\n  );\n}\n"],"mappings":"yKASA,oDACA,+D,0/BAEe,QAASA,aAAT,EAEuB,+BADjCC,IACiC,0CADjCA,IACiC,wBACpC,MAAOC,MAAK,CAACC,OAAN,CACL,iBAAMC,mBAAA,cAAaH,IAAb,CAAN,EADK,WAGDA,IAHC,EAAP,CAKD"},"metadata":{},"sourceType":"script"}