{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.useSharedValue=useSharedValue;var _react=require(\"react\");var _animation=require(\"../animation\");var _core=require(\"../core\");function useSharedValue(init){var ref=(0,_react.useRef)((0,_core.makeMutable)(init));if(ref.current===null){ref.current=(0,_core.makeMutable)(init);}(0,_react.useEffect)(function(){return function(){(0,_animation.cancelAnimation)(ref.current);};},[]);return ref.current;}","map":{"version":3,"names":["useSharedValue","init","ref","useRef","makeMutable","current","useEffect","cancelAnimation"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-reanimated/lib/reanimated2/hook/useSharedValue.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { cancelAnimation } from '../animation';\nimport { makeMutable } from '../core';\nexport function useSharedValue(init) {\n    const ref = useRef(makeMutable(init));\n    if (ref.current === null) {\n        ref.current = makeMutable(init);\n    }\n    useEffect(() => {\n        return () => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            cancelAnimation(ref.current);\n        };\n    }, []);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return ref.current;\n}\n"],"mappings":"+FAAA,4BACA,uCACA,6BACO,QAASA,eAAT,CAAwBC,IAAxB,CAA8B,CACjC,GAAMC,IAAG,CAAG,GAAAC,aAAA,EAAO,GAAAC,iBAAA,EAAYH,IAAZ,CAAP,CAAZ,CACA,GAAIC,GAAG,CAACG,OAAJ,GAAgB,IAApB,CAA0B,CACtBH,GAAG,CAACG,OAAJ,CAAc,GAAAD,iBAAA,EAAYH,IAAZ,CAAd,CACH,CACD,GAAAK,gBAAA,EAAU,UAAM,CACZ,MAAO,WAAM,CAET,GAAAC,0BAAA,EAAgBL,GAAG,CAACG,OAApB,EACH,CAHD,CAIH,CALD,CAKG,EALH,EAOA,MAAOH,IAAG,CAACG,OAAX,CACH"},"metadata":{},"sourceType":"script"}