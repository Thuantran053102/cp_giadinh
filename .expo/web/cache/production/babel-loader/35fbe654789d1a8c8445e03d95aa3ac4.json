{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useLinkBuilder;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var React=_interopRequireWildcard(require(\"react\"));var _core=require(\"@react-navigation/core\");var _LinkingContext=_interopRequireDefault(require(\"./LinkingContext\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var getRootStateForNavigate=function getRootStateForNavigate(navigation,state){var parent=navigation.getParent();if(parent){var parentState=parent.getState();return getRootStateForNavigate(parent,{index:0,routes:[(0,_extends2.default)({},parentState.routes[parentState.index],{state:state})]});}return state;};function useLinkBuilder(){var navigation=React.useContext(_core.NavigationHelpersContext);var linking=React.useContext(_LinkingContext.default);var buildLink=React.useCallback(function(name,params){var options=linking.options;if((options===null||options===void 0?void 0:options.enabled)===false){return undefined;}var state=navigation?getRootStateForNavigate(navigation,{index:0,routes:[{name:name,params:params}]}):{index:0,routes:[{name:name,params:params}]};var path=options!==null&&options!==void 0&&options.getPathFromState?options.getPathFromState(state,options===null||options===void 0?void 0:options.config):(0,_core.getPathFromState)(state,options===null||options===void 0?void 0:options.config);return path;},[linking,navigation]);return buildLink;}","map":{"version":3,"sources":["useLinkBuilder.tsx"],"names":["getRootStateForNavigate","parent","navigation","parentState","index","routes","state","React","linking","buildLink","options","name","params","path","getPathFromState"],"mappings":"2PAAA,oDACA,4CAOA,wE,0/BAWA,GAAMA,wBAAuB,CAAG,QAA1BA,wBAA0B,CAAA,UAAA,CAAA,KAAA,CAGb,CACjB,GAAMC,OAAM,CAAGC,UAAU,CAAzB,SAAeA,EAAf,CAEA,GAAA,MAAA,CAAY,CACV,GAAMC,YAAW,CAAGF,MAAM,CAA1B,QAAoBA,EAApB,CAEA,MAAOD,wBAAuB,CAAA,MAAA,CAAS,CACrCI,KAAK,CADgC,CAAA,CAErCC,MAAM,CAAE,0BAEDF,WAAW,CAAXA,MAAAA,CAAmBA,WAAW,CADnC,KACKA,CAFC,EAGJG,KAAK,CAAEA,KAHH,GAF6B,CAAT,CAA9B,CASD,CAED,MAAA,MAAA,CApBF,CAAA,CA2Be,QAAA,eAAA,EAA0B,CACvC,GAAMJ,WAAU,CAAGK,KAAK,CAALA,UAAAA,CAAnB,8BAAmBA,CAAnB,CACA,GAAMC,QAAO,CAAGD,KAAK,CAALA,UAAAA,CAAhB,uBAAgBA,CAAhB,CAEA,GAAME,UAAS,CAAG,KAAK,CAAL,WAAA,CAChB,SAAA,IAAA,CAAA,MAAA,CAAmC,CACjC,GAAQC,QAAR,CAAA,OAAA,CAAQA,OAAR,CAEA,GAAI,CAAA,OAAO,GAAP,IAAA,EAAA,OAAO,GAAA,IAAP,EAAA,CAAA,IAAA,EAAA,CAAA,OAAO,CAAP,OAAA,IAAJ,KAAA,CAAgC,CAC9B,MAAA,UAAA,CACD,CAED,GAAMJ,MAAK,CAAGJ,UAAU,CACpBF,uBAAuB,CAAA,UAAA,CAAa,CAClCI,KAAK,CAD6B,CAAA,CAElCC,MAAM,CAAE,CAAC,CAAEM,IAAF,CAAEA,IAAF,CAAQC,MAAAA,CAAAA,MAAR,CAAD,CAF0B,CAAb,CADH,CAOpB,CACER,KAAK,CADP,CAAA,CAEEC,MAAM,CAAE,CAAC,CAAEM,IAAF,CAAEA,IAAF,CAAQC,MAAAA,CAAAA,MAAR,CAAD,CAFV,CAPJ,CAYA,GAAMC,KAAI,CAAGH,OAAO,GAAPA,IAAAA,EAAAA,OAAO,GAAA,IAAPA,EAAAA,EAAAA,OAAO,CAAPA,gBAAAA,CACTA,OAAO,CAAPA,gBAAAA,CAAAA,KAAAA,CAAgCA,OAAhCA,GAAAA,IAAgCA,EAAAA,OAAhCA,GAAAA,IAAAA,EAAgCA,CAAhCA,IAAAA,EAAgCA,CAAAA,OAAO,CAD9BA,MACTA,CADSA,CAETI,GAAAA,sBAAAA,EAAgB,KAAhBA,CAAwBJ,OAAR,GAAA,IAAQA,EAAAA,OAAR,GAAA,IAAA,EAAQA,CAAR,IAAA,EAAQA,CAAAA,OAAO,CAFnC,MAEII,CAFJ,CAIA,MAAA,KAAA,CAxBc,CAAA,CA0BhB,CAAA,OAAA,CA1BF,UA0BE,CA1BgB,CAAlB,CA6BA,MAAA,UAAA,CACD","sourcesContent":["import * as React from 'react';\nimport {\n  NavigationHelpers,\n  NavigationHelpersContext,\n  NavigationProp,\n  ParamListBase,\n  getPathFromState,\n} from '@react-navigation/core';\nimport LinkingContext from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildLink = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  return buildLink;\n}\n"]},"metadata":{},"sourceType":"script"}