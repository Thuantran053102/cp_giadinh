{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=BottomTabBar;exports.getTabBarHeight=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _native=require(\"@react-navigation/native\");var _reactNativeSafeAreaContext=require(\"react-native-safe-area-context\");var _BottomTabItem=_interopRequireDefault(require(\"./BottomTabItem\"));var _BottomTabBarHeightCallbackContext=_interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));var _useWindowDimensions=_interopRequireDefault(require(\"../utils/useWindowDimensions\"));var _useIsKeyboardShown=_interopRequireDefault(require(\"../utils/useIsKeyboardShown\"));var _excluded=[\"dimensions\",\"insets\",\"style\"];var DEFAULT_TABBAR_HEIGHT=49;var COMPACT_TABBAR_HEIGHT=32;var DEFAULT_MAX_TAB_ITEM_WIDTH=125;var useNativeDriver=_reactNative.Platform.OS!=='web';var shouldUseHorizontalLabels=function shouldUseHorizontalLabels(_ref){var state=_ref.state,layout=_ref.layout,dimensions=_ref.dimensions,_ref$adaptive=_ref.adaptive,adaptive=_ref$adaptive===void 0?true:_ref$adaptive,labelPosition=_ref.labelPosition,tabStyle=_ref.tabStyle;if(labelPosition){return labelPosition==='beside-icon';}if(!adaptive){return false;}if(layout.width>=768){var maxTabItemWidth=DEFAULT_MAX_TAB_ITEM_WIDTH;var flattenedStyle=_reactNative.StyleSheet.flatten(tabStyle);if(flattenedStyle){if(typeof flattenedStyle.width==='number'){maxTabItemWidth=flattenedStyle.width;}else if(typeof flattenedStyle.maxWidth==='number'){maxTabItemWidth=flattenedStyle.maxWidth;}}return state.routes.length*maxTabItemWidth<=layout.width;}else{return dimensions.width>dimensions.height;}};var getPaddingBottom=function getPaddingBottom(insets){return Math.max(insets.bottom-_reactNative.Platform.select({ios:4,default:0}),0);};var getTabBarHeight=function getTabBarHeight(_ref2){var dimensions=_ref2.dimensions,insets=_ref2.insets,style=_ref2.style,rest=(0,_objectWithoutProperties2.default)(_ref2,_excluded);var _StyleSheet$flatten;var customHeight=(_StyleSheet$flatten=_reactNative.StyleSheet.flatten(style))===null||_StyleSheet$flatten===void 0?void 0:_StyleSheet$flatten.height;if(typeof customHeight==='number'){return customHeight;}var isLandscape=dimensions.width>dimensions.height;var horizontalLabels=shouldUseHorizontalLabels((0,_extends2.default)({dimensions:dimensions},rest));var paddingBottom=getPaddingBottom(insets);if(_reactNative.Platform.OS==='ios'&&!_reactNative.Platform.isPad&&isLandscape&&horizontalLabels){return COMPACT_TABBAR_HEIGHT+paddingBottom;}return DEFAULT_TABBAR_HEIGHT+paddingBottom;};exports.getTabBarHeight=getTabBarHeight;function BottomTabBar(_ref3){var state=_ref3.state,navigation=_ref3.navigation,descriptors=_ref3.descriptors,activeBackgroundColor=_ref3.activeBackgroundColor,activeTintColor=_ref3.activeTintColor,adaptive=_ref3.adaptive,allowFontScaling=_ref3.allowFontScaling,inactiveBackgroundColor=_ref3.inactiveBackgroundColor,inactiveTintColor=_ref3.inactiveTintColor,_ref3$keyboardHidesTa=_ref3.keyboardHidesTabBar,keyboardHidesTabBar=_ref3$keyboardHidesTa===void 0?false:_ref3$keyboardHidesTa,labelPosition=_ref3.labelPosition,labelStyle=_ref3.labelStyle,iconStyle=_ref3.iconStyle,safeAreaInsets=_ref3.safeAreaInsets,showLabel=_ref3.showLabel,style=_ref3.style,tabStyle=_ref3.tabStyle;var _safeAreaInsets$top,_safeAreaInsets$right,_safeAreaInsets$botto,_safeAreaInsets$left;var _useTheme=(0,_native.useTheme)(),colors=_useTheme.colors;var buildLink=(0,_native.useLinkBuilder)();var focusedRoute=state.routes[state.index];var focusedDescriptor=descriptors[focusedRoute.key];var focusedOptions=focusedDescriptor.options;var dimensions=(0,_useWindowDimensions.default)();var isKeyboardShown=(0,_useIsKeyboardShown.default)();var onHeightChange=_react.default.useContext(_BottomTabBarHeightCallbackContext.default);var shouldShowTabBar=focusedOptions.tabBarVisible!==false&&!(keyboardHidesTabBar&&isKeyboardShown);var visibilityAnimationConfigRef=_react.default.useRef(focusedOptions.tabBarVisibilityAnimationConfig);_react.default.useEffect(function(){visibilityAnimationConfigRef.current=focusedOptions.tabBarVisibilityAnimationConfig;});var _React$useState=_react.default.useState(!shouldShowTabBar),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),isTabBarHidden=_React$useState2[0],setIsTabBarHidden=_React$useState2[1];var _React$useState3=_react.default.useState(function(){return new _reactNative.Animated.Value(shouldShowTabBar?1:0);}),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,1),visible=_React$useState4[0];_react.default.useEffect(function(){var visibilityAnimationConfig=visibilityAnimationConfigRef.current;if(shouldShowTabBar){var _visibilityAnimationC,_visibilityAnimationC2;var animation=(visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC=visibilityAnimationConfig.show)===null||_visibilityAnimationC===void 0?void 0:_visibilityAnimationC.animation)==='spring'?_reactNative.Animated.spring:_reactNative.Animated.timing;animation(visible,(0,_extends2.default)({toValue:1,useNativeDriver:useNativeDriver,duration:250},visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC2=visibilityAnimationConfig.show)===null||_visibilityAnimationC2===void 0?void 0:_visibilityAnimationC2.config)).start(function(_ref4){var finished=_ref4.finished;if(finished){setIsTabBarHidden(false);}});}else{var _visibilityAnimationC3,_visibilityAnimationC4;setIsTabBarHidden(true);var _animation=(visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC3=visibilityAnimationConfig.hide)===null||_visibilityAnimationC3===void 0?void 0:_visibilityAnimationC3.animation)==='spring'?_reactNative.Animated.spring:_reactNative.Animated.timing;_animation(visible,(0,_extends2.default)({toValue:0,useNativeDriver:useNativeDriver,duration:200},visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC4=visibilityAnimationConfig.hide)===null||_visibilityAnimationC4===void 0?void 0:_visibilityAnimationC4.config)).start();}},[visible,shouldShowTabBar]);var _React$useState5=_react.default.useState({height:0,width:dimensions.width}),_React$useState6=(0,_slicedToArray2.default)(_React$useState5,2),layout=_React$useState6[0],setLayout=_React$useState6[1];var handleLayout=function handleLayout(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;onHeightChange===null||onHeightChange===void 0?void 0:onHeightChange(height);setLayout(function(layout){if(height===layout.height&&width===layout.width){return layout;}else{return{height:height,width:width};}});};var routes=state.routes;var defaultInsets=(0,_reactNativeSafeAreaContext.useSafeArea)();var insets={top:(_safeAreaInsets$top=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.top)!==null&&_safeAreaInsets$top!==void 0?_safeAreaInsets$top:defaultInsets.top,right:(_safeAreaInsets$right=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right)!==null&&_safeAreaInsets$right!==void 0?_safeAreaInsets$right:defaultInsets.right,bottom:(_safeAreaInsets$botto=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom)!==null&&_safeAreaInsets$botto!==void 0?_safeAreaInsets$botto:defaultInsets.bottom,left:(_safeAreaInsets$left=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left)!==null&&_safeAreaInsets$left!==void 0?_safeAreaInsets$left:defaultInsets.left};var paddingBottom=getPaddingBottom(insets);var tabBarHeight=getTabBarHeight({state:state,insets:insets,dimensions:dimensions,layout:layout,adaptive:adaptive,labelPosition:labelPosition,tabStyle:tabStyle,style:style});var hasHorizontalLabels=shouldUseHorizontalLabels({state:state,dimensions:dimensions,layout:layout,adaptive:adaptive,labelPosition:labelPosition,tabStyle:tabStyle});return _react.default.createElement(_reactNative.Animated.View,{style:[styles.tabBar,{backgroundColor:colors.card,borderTopColor:colors.border},{transform:[{translateY:visible.interpolate({inputRange:[0,1],outputRange:[layout.height+paddingBottom+_reactNative.StyleSheet.hairlineWidth,0]})}],position:isTabBarHidden?'absolute':null},{height:tabBarHeight,paddingBottom:paddingBottom,paddingHorizontal:Math.max(insets.left,insets.right)},style],pointerEvents:isTabBarHidden?'none':'auto',onLayout:handleLayout},_react.default.createElement(_reactNative.View,{style:styles.content},routes.map(function(route,index){var focused=index===state.index;var options=descriptors[route.key].options;var onPress=function onPress(){var event=navigation.emit({type:'tabPress',target:route.key,canPreventDefault:true});if(!focused&&!event.defaultPrevented){navigation.dispatch((0,_extends2.default)({},_native.CommonActions.navigate(route.name),{target:state.key}));}};var onLongPress=function onLongPress(){navigation.emit({type:'tabLongPress',target:route.key});};var label=options.tabBarLabel!==undefined?options.tabBarLabel:options.title!==undefined?options.title:route.name;var accessibilityLabel=options.tabBarAccessibilityLabel!==undefined?options.tabBarAccessibilityLabel:typeof label==='string'?\"\".concat(label,\", tab, \").concat(index+1,\" of \").concat(routes.length):undefined;return _react.default.createElement(_native.NavigationContext.Provider,{key:route.key,value:descriptors[route.key].navigation},_react.default.createElement(_native.NavigationRouteContext.Provider,{value:route},_react.default.createElement(_BottomTabItem.default,{route:route,focused:focused,horizontal:hasHorizontalLabels,onPress:onPress,onLongPress:onLongPress,accessibilityLabel:accessibilityLabel,to:buildLink(route.name,route.params),testID:options.tabBarTestID,allowFontScaling:allowFontScaling,activeTintColor:activeTintColor,inactiveTintColor:inactiveTintColor,activeBackgroundColor:activeBackgroundColor,inactiveBackgroundColor:inactiveBackgroundColor,button:options.tabBarButton,icon:options.tabBarIcon,badge:options.tabBarBadge,badgeStyle:options.tabBarBadgeStyle,label:label,showLabel:showLabel,labelStyle:labelStyle,iconStyle:iconStyle,style:tabStyle})));})));}var styles=_reactNative.StyleSheet.create({tabBar:{left:0,right:0,bottom:0,borderTopWidth:_reactNative.StyleSheet.hairlineWidth,elevation:8},content:{flex:1,flexDirection:'row'}});","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","shouldUseHorizontalLabels","adaptive","tabStyle","labelPosition","layout","maxTabItemWidth","flattenedStyle","StyleSheet","state","dimensions","getPaddingBottom","insets","ios","default","getTabBarHeight","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","keyboardHidesTabBar","colors","buildLink","focusedRoute","focusedDescriptor","descriptors","focusedOptions","isKeyboardShown","onHeightChange","React","shouldShowTabBar","visibilityAnimationConfigRef","Animated","visibilityAnimationConfig","animation","toValue","duration","finished","setIsTabBarHidden","height","width","handleLayout","e","setLayout","routes","defaultInsets","top","safeAreaInsets","right","bottom","left","tabBarHeight","style","hasHorizontalLabels","styles","backgroundColor","borderTopColor","border","transform","translateY","inputRange","outputRange","position","isTabBarHidden","paddingHorizontal","Math","content","focused","index","options","route","onPress","event","type","target","canPreventDefault","navigation","CommonActions","key","onLongPress","label","accessibilityLabel","tabBar","borderTopWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}