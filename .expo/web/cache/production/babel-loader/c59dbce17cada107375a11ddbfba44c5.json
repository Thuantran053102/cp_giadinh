{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=setBadgeCountAsync;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _expoModulesCore=require(\"expo-modules-core\");var _BadgeModule=_interopRequireDefault(require(\"./BadgeModule\"));function setBadgeCountAsync(badgeCount,options){return _regenerator.default.async(function setBadgeCountAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(_BadgeModule.default.setBadgeCountAsync){_context.next=2;break;}throw new _expoModulesCore.UnavailabilityError('ExpoNotifications','setBadgeCountAsync');case 2:_context.next=4;return _regenerator.default.awrap(_BadgeModule.default.setBadgeCountAsync(badgeCount,options==null?void 0:options[_expoModulesCore.Platform.OS]));case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/setBadgeCountAsync.ts"],"names":[],"mappings":"8PAAA,kDAEA,kEAOe,QAAe,mBAAf,CACb,UADa,CAEb,OAFa,kIAIR,oBAAA,CAAY,kBAJJ,8BAKL,IAAI,qCAAJ,CAAwB,mBAAxB,CAA6C,oBAA7C,CALK,0DAQA,oBAAA,CAAY,kBAAZ,CAA+B,UAA/B,CAA2C,OAA3C,cAA2C,OAAO,CAAG,yBAAA,CAAS,EAAZ,CAAlD,CARA","sourcesContent":["import { UnavailabilityError, Platform } from 'expo-modules-core';\n\nimport BadgeModule from './BadgeModule';\nimport { WebSetBadgeCountOptions } from './BadgeModule.types';\n\nexport interface SetBadgeCountOptions {\n  web?: WebSetBadgeCountOptions;\n}\n\nexport default async function setBadgeCountAsync(\n  badgeCount: number,\n  options?: SetBadgeCountOptions\n): Promise<boolean> {\n  if (!BadgeModule.setBadgeCountAsync) {\n    throw new UnavailabilityError('ExpoNotifications', 'setBadgeCountAsync');\n  }\n\n  return await BadgeModule.setBadgeCountAsync(badgeCount, options?.[Platform.OS]);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}