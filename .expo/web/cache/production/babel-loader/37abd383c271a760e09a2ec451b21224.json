{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.addNode=addNode;exports.attachListeners=attachListeners;exports.getResponderNode=getResponderNode;exports.removeNode=removeNode;exports.terminateResponder=terminateResponder;var _ExecutionEnvironment=require(\"fbjs/lib/ExecutionEnvironment\");var _createResponderEvent=_interopRequireDefault(require(\"./createResponderEvent\"));var _ResponderEventTypes=require(\"./ResponderEventTypes\");var _utils=require(\"./utils\");var _ResponderTouchHistoryStore=_interopRequireDefault(require(\"./ResponderTouchHistoryStore\"));var emptyObject={};var startRegistration=['onStartShouldSetResponderCapture','onStartShouldSetResponder',{bubbles:true}];var moveRegistration=['onMoveShouldSetResponderCapture','onMoveShouldSetResponder',{bubbles:true}];var scrollRegistration=['onScrollShouldSetResponderCapture','onScrollShouldSetResponder',{bubbles:false}];var shouldSetResponderEvents={touchstart:startRegistration,mousedown:startRegistration,touchmove:moveRegistration,mousemove:moveRegistration,scroll:scrollRegistration};var emptyResponder={id:null,idPath:null,node:null};var responderListenersMap=new Map();var isEmulatingMouseEvents=false;var trackedTouchCount=0;var currentResponder={id:null,node:null,idPath:null};function changeCurrentResponder(responder){currentResponder=responder;}function getResponderConfig(id){var config=responderListenersMap.get(id);return config!=null?config:emptyObject;}function eventListener(domEvent){var eventType=domEvent.type;var eventTarget=domEvent.target;if(eventType==='touchstart'){isEmulatingMouseEvents=true;}if(eventType==='touchmove'||trackedTouchCount>1){isEmulatingMouseEvents=false;}if(eventType==='mousedown'&&isEmulatingMouseEvents||eventType==='mousemove'&&isEmulatingMouseEvents||eventType==='mousemove'&&trackedTouchCount<1){return;}if(isEmulatingMouseEvents&&eventType==='mouseup'){if(trackedTouchCount===0){isEmulatingMouseEvents=false;}return;}var isStartEvent=(0,_ResponderEventTypes.isStartish)(eventType)&&(0,_utils.isPrimaryPointerDown)(domEvent);var isMoveEvent=(0,_ResponderEventTypes.isMoveish)(eventType);var isEndEvent=(0,_ResponderEventTypes.isEndish)(eventType);var isScrollEvent=(0,_ResponderEventTypes.isScroll)(eventType);var isSelectionChangeEvent=(0,_ResponderEventTypes.isSelectionChange)(eventType);var responderEvent=(0,_createResponderEvent.default)(domEvent);if(isStartEvent||isMoveEvent||isEndEvent){if(domEvent.touches){trackedTouchCount=domEvent.touches.length;}else{if(isStartEvent){trackedTouchCount=1;}else if(isEndEvent){trackedTouchCount=0;}}_ResponderTouchHistoryStore.default.recordTouchTrack(eventType,responderEvent.nativeEvent);}var eventPaths=(0,_utils.getResponderPaths)(domEvent);var wasNegotiated=false;var wantsResponder;if(isStartEvent||isMoveEvent||isScrollEvent&&trackedTouchCount>0){var currentResponderIdPath=currentResponder.idPath;var eventIdPath=eventPaths.idPath;if(currentResponderIdPath!=null&&eventIdPath!=null){var lowestCommonAncestor=(0,_utils.getLowestCommonAncestor)(currentResponderIdPath,eventIdPath);if(lowestCommonAncestor!=null){var indexOfLowestCommonAncestor=eventIdPath.indexOf(lowestCommonAncestor);var index=indexOfLowestCommonAncestor+(lowestCommonAncestor===currentResponder.id?1:0);eventPaths={idPath:eventIdPath.slice(index),nodePath:eventPaths.nodePath.slice(index)};}else{eventPaths=null;}}if(eventPaths!=null){wantsResponder=findWantsResponder(eventPaths,domEvent,responderEvent);if(wantsResponder!=null){attemptTransfer(responderEvent,wantsResponder);wasNegotiated=true;}}}if(currentResponder.id!=null&&currentResponder.node!=null){var _currentResponder=currentResponder,id=_currentResponder.id,node=_currentResponder.node;var _getResponderConfig=getResponderConfig(id),onResponderStart=_getResponderConfig.onResponderStart,onResponderMove=_getResponderConfig.onResponderMove,onResponderEnd=_getResponderConfig.onResponderEnd,onResponderRelease=_getResponderConfig.onResponderRelease,onResponderTerminate=_getResponderConfig.onResponderTerminate,onResponderTerminationRequest=_getResponderConfig.onResponderTerminationRequest;responderEvent.bubbles=false;responderEvent.cancelable=false;responderEvent.currentTarget=node;if(isStartEvent){if(onResponderStart!=null){responderEvent.dispatchConfig.registrationName='onResponderStart';onResponderStart(responderEvent);}}else if(isMoveEvent){if(onResponderMove!=null){responderEvent.dispatchConfig.registrationName='onResponderMove';onResponderMove(responderEvent);}}else{var isTerminateEvent=(0,_ResponderEventTypes.isCancelish)(eventType)||eventType==='contextmenu'||eventType==='blur'&&eventTarget===window||eventType==='blur'&&eventTarget.contains(node)&&domEvent.relatedTarget!==node||isScrollEvent&&trackedTouchCount===0||isScrollEvent&&eventTarget.contains(node)&&eventTarget!==node||isSelectionChangeEvent&&(0,_utils.hasValidSelection)(domEvent);var isReleaseEvent=isEndEvent&&!isTerminateEvent&&!(0,_utils.hasTargetTouches)(node,domEvent.touches);if(isEndEvent){if(onResponderEnd!=null){responderEvent.dispatchConfig.registrationName='onResponderEnd';onResponderEnd(responderEvent);}}if(isReleaseEvent){if(onResponderRelease!=null){responderEvent.dispatchConfig.registrationName='onResponderRelease';onResponderRelease(responderEvent);}changeCurrentResponder(emptyResponder);}if(isTerminateEvent){var shouldTerminate=true;if(eventType==='contextmenu'||eventType==='scroll'||eventType==='selectionchange'){if(wasNegotiated){shouldTerminate=false;}else if(onResponderTerminationRequest!=null){responderEvent.dispatchConfig.registrationName='onResponderTerminationRequest';if(onResponderTerminationRequest(responderEvent)===false){shouldTerminate=false;}}}if(shouldTerminate){if(onResponderTerminate!=null){responderEvent.dispatchConfig.registrationName='onResponderTerminate';onResponderTerminate(responderEvent);}changeCurrentResponder(emptyResponder);isEmulatingMouseEvents=false;trackedTouchCount=0;}}}}}function findWantsResponder(eventPaths,domEvent,responderEvent){var shouldSetCallbacks=shouldSetResponderEvents[domEvent.type];if(shouldSetCallbacks!=null){var idPath=eventPaths.idPath,nodePath=eventPaths.nodePath;var shouldSetCallbackCaptureName=shouldSetCallbacks[0];var shouldSetCallbackBubbleName=shouldSetCallbacks[1];var bubbles=shouldSetCallbacks[2].bubbles;var check=function check(id,node,callbackName){var config=getResponderConfig(id);var shouldSetCallback=config[callbackName];if(shouldSetCallback!=null){responderEvent.currentTarget=node;if(shouldSetCallback(responderEvent)===true){var prunedIdPath=idPath.slice(idPath.indexOf(id));return{id:id,node:node,idPath:prunedIdPath};}}};for(var i=idPath.length-1;i>=0;i--){var id=idPath[i];var node=nodePath[i];var result=check(id,node,shouldSetCallbackCaptureName);if(result!=null){return result;}if(responderEvent.isPropagationStopped()===true){return;}}if(bubbles){for(var _i=0;_i<idPath.length;_i++){var _id=idPath[_i];var _node=nodePath[_i];var _result=check(_id,_node,shouldSetCallbackBubbleName);if(_result!=null){return _result;}if(responderEvent.isPropagationStopped()===true){return;}}}else{var _id2=idPath[0];var _node2=nodePath[0];var target=domEvent.target;if(target===_node2){return check(_id2,_node2,shouldSetCallbackBubbleName);}}}}function attemptTransfer(responderEvent,wantsResponder){var _currentResponder2=currentResponder,currentId=_currentResponder2.id,currentNode=_currentResponder2.node;var id=wantsResponder.id,node=wantsResponder.node;var _getResponderConfig2=getResponderConfig(id),onResponderGrant=_getResponderConfig2.onResponderGrant,onResponderReject=_getResponderConfig2.onResponderReject;responderEvent.bubbles=false;responderEvent.cancelable=false;responderEvent.currentTarget=node;if(currentId==null){if(onResponderGrant!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderGrant';onResponderGrant(responderEvent);}changeCurrentResponder(wantsResponder);}else{var _getResponderConfig3=getResponderConfig(currentId),onResponderTerminate=_getResponderConfig3.onResponderTerminate,onResponderTerminationRequest=_getResponderConfig3.onResponderTerminationRequest;var allowTransfer=true;if(onResponderTerminationRequest!=null){responderEvent.currentTarget=currentNode;responderEvent.dispatchConfig.registrationName='onResponderTerminationRequest';if(onResponderTerminationRequest(responderEvent)===false){allowTransfer=false;}}if(allowTransfer){if(onResponderTerminate!=null){responderEvent.currentTarget=currentNode;responderEvent.dispatchConfig.registrationName='onResponderTerminate';onResponderTerminate(responderEvent);}if(onResponderGrant!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderGrant';onResponderGrant(responderEvent);}changeCurrentResponder(wantsResponder);}else{if(onResponderReject!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderReject';onResponderReject(responderEvent);}}}}var documentEventsCapturePhase=['blur','scroll'];var documentEventsBubblePhase=['mousedown','mousemove','mouseup','dragstart','touchstart','touchmove','touchend','touchcancel','contextmenu','select','selectionchange'];function attachListeners(){if(_ExecutionEnvironment.canUseDOM&&window.__reactResponderSystemActive==null){window.addEventListener('blur',eventListener);documentEventsBubblePhase.forEach(function(eventType){document.addEventListener(eventType,eventListener);});documentEventsCapturePhase.forEach(function(eventType){document.addEventListener(eventType,eventListener,true);});window.__reactResponderSystemActive=true;}}function addNode(id,node,config){(0,_utils.setResponderId)(node,id);responderListenersMap.set(id,config);}function removeNode(id){if(currentResponder.id===id){terminateResponder();}if(responderListenersMap.has(id)){responderListenersMap.delete(id);}}function terminateResponder(){var _currentResponder3=currentResponder,id=_currentResponder3.id,node=_currentResponder3.node;if(id!=null&&node!=null){var _getResponderConfig4=getResponderConfig(id),onResponderTerminate=_getResponderConfig4.onResponderTerminate;if(onResponderTerminate!=null){var event=(0,_createResponderEvent.default)({});event.currentTarget=node;onResponderTerminate(event);}changeCurrentResponder(emptyResponder);}isEmulatingMouseEvents=false;trackedTouchCount=0;}function getResponderNode(){return currentResponder.node;}","map":{"version":3,"names":["emptyObject","startRegistration","bubbles","moveRegistration","scrollRegistration","shouldSetResponderEvents","touchstart","mousedown","touchmove","mousemove","scroll","emptyResponder","id","idPath","node","responderListenersMap","Map","isEmulatingMouseEvents","trackedTouchCount","currentResponder","changeCurrentResponder","responder","getResponderConfig","config","get","eventListener","domEvent","eventType","type","eventTarget","target","isStartEvent","isStartish","isPrimaryPointerDown","isMoveEvent","isMoveish","isEndEvent","isEndish","isScrollEvent","isScroll","isSelectionChangeEvent","isSelectionChange","responderEvent","createResponderEvent","touches","length","ResponderTouchHistoryStore","recordTouchTrack","nativeEvent","eventPaths","getResponderPaths","wasNegotiated","wantsResponder","currentResponderIdPath","eventIdPath","lowestCommonAncestor","getLowestCommonAncestor","indexOfLowestCommonAncestor","indexOf","index","slice","nodePath","findWantsResponder","attemptTransfer","_currentResponder","_getResponderConfig","onResponderStart","onResponderMove","onResponderEnd","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","cancelable","currentTarget","dispatchConfig","registrationName","isTerminateEvent","isCancelish","window","contains","relatedTarget","hasValidSelection","isReleaseEvent","hasTargetTouches","shouldTerminate","shouldSetCallbacks","shouldSetCallbackCaptureName","shouldSetCallbackBubbleName","check","callbackName","shouldSetCallback","prunedIdPath","i","result","isPropagationStopped","_i","_id","_node","_result","_id2","_node2","_currentResponder2","currentId","currentNode","_getResponderConfig2","onResponderGrant","onResponderReject","_getResponderConfig3","allowTransfer","documentEventsCapturePhase","documentEventsBubblePhase","attachListeners","canUseDOM","__reactResponderSystemActive","addEventListener","forEach","document","addNode","setResponderId","set","removeNode","terminateResponder","has","delete","_currentResponder3","_getResponderConfig4","event","getResponderNode"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-web/dist/modules/useResponderEvents/ResponderSystem.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * RESPONDER EVENT SYSTEM\n *\n * A single, global \"interaction lock\" on views. For a view to be the \"responder\" means\n * that pointer interactions are exclusive to that view and none other. The \"interaction\n * lock\" can be transferred (only) to ancestors of the current \"responder\" as long as\n * pointers continue to be active.\n *\n * Responder being granted:\n *\n * A view can become the \"responder\" after the following events:\n *  * \"pointerdown\" (implemented using \"touchstart\", \"mousedown\")\n *  * \"pointermove\" (implemented using \"touchmove\", \"mousemove\")\n *  * \"scroll\" (while a pointer is down)\n *  * \"selectionchange\" (while a pointer is down)\n *\n * If nothing is already the \"responder\", the event propagates to (capture) and from\n * (bubble) the event target until a view returns `true` for\n * `on*ShouldSetResponder(Capture)`.\n *\n * If something is already the responder, the event propagates to (capture) and from\n * (bubble) the lowest common ancestor of the event target and the current \"responder\".\n * Then negotiation happens between the current \"responder\" and a view that wants to\n * become the \"responder\": see the timing diagram below.\n *\n * (NOTE: Scrolled views either automatically become the \"responder\" or release the\n * \"interaction lock\". A native scroll view that isn't built on top of the responder\n * system must result in the current \"responder\" being notified that it no longer has\n * the \"interaction lock\" - the native system has taken over.\n *\n * Responder being released:\n *\n * As soon as there are no more active pointers that *started* inside descendants\n * of the *current* \"responder\", an `onResponderRelease` event is dispatched to the\n * current \"responder\", and the responder lock is released.\n *\n * Typical sequence of events:\n *  * startShouldSetResponder\n *  * responderGrant/Reject\n *  * responderStart\n *  * responderMove\n *  * responderEnd\n *  * responderRelease\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +--------------+          |                            |\n     | onTouchStart |          |                            |\n     +------+-------+    none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->| onResponderStart (cur) |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | | onResponder            | |\n            +------------------->|    TerminationRequest  | |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | | onResponderTerminate   |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->| onResponderMove (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createResponderEvent from './createResponderEvent';\nimport { isCancelish, isEndish, isMoveish, isScroll, isSelectionChange, isStartish } from './ResponderEventTypes';\nimport { getLowestCommonAncestor, getResponderPaths, hasTargetTouches, hasValidSelection, isPrimaryPointerDown, setResponderId } from './utils';\nimport ResponderTouchHistoryStore from './ResponderTouchHistoryStore';\n/* ------------ TYPES ------------ */\n\nvar emptyObject = {};\n/* ------------ IMPLEMENTATION ------------ */\n\nvar startRegistration = ['onStartShouldSetResponderCapture', 'onStartShouldSetResponder', {\n  bubbles: true\n}];\nvar moveRegistration = ['onMoveShouldSetResponderCapture', 'onMoveShouldSetResponder', {\n  bubbles: true\n}];\nvar scrollRegistration = ['onScrollShouldSetResponderCapture', 'onScrollShouldSetResponder', {\n  bubbles: false\n}];\nvar shouldSetResponderEvents = {\n  touchstart: startRegistration,\n  mousedown: startRegistration,\n  touchmove: moveRegistration,\n  mousemove: moveRegistration,\n  scroll: scrollRegistration\n};\nvar emptyResponder = {\n  id: null,\n  idPath: null,\n  node: null\n};\nvar responderListenersMap = new Map();\nvar isEmulatingMouseEvents = false;\nvar trackedTouchCount = 0;\nvar currentResponder = {\n  id: null,\n  node: null,\n  idPath: null\n};\n\nfunction changeCurrentResponder(responder) {\n  currentResponder = responder;\n}\n\nfunction getResponderConfig(id) {\n  var config = responderListenersMap.get(id);\n  return config != null ? config : emptyObject;\n}\n/**\n * Process native events\n *\n * A single event listener is used to manage the responder system.\n * All pointers are tracked in the ResponderTouchHistoryStore. Native events\n * are interpreted in terms of the Responder System and checked to see if\n * the responder should be transferred. Each host node that is attached to\n * the Responder System has an ID, which is used to look up its associated\n * callbacks.\n */\n\n\nfunction eventListener(domEvent) {\n  var eventType = domEvent.type;\n  var eventTarget = domEvent.target;\n  /**\n   * Manage emulated events and early bailout.\n   * Since PointerEvent is not used yet (lack of support in older Safari), it's\n   * necessary to manually manage the mess of browser touch/mouse events.\n   * And bailout early for termination events when there is no active responder.\n   */\n  // Flag when browser may produce emulated events\n\n  if (eventType === 'touchstart') {\n    isEmulatingMouseEvents = true;\n  } // Remove flag when browser will not produce emulated events\n\n\n  if (eventType === 'touchmove' || trackedTouchCount > 1) {\n    isEmulatingMouseEvents = false;\n  } // Ignore various events in particular circumstances\n\n\n  if ( // Ignore browser emulated mouse events\n  eventType === 'mousedown' && isEmulatingMouseEvents || eventType === 'mousemove' && isEmulatingMouseEvents || // Ignore mousemove if a mousedown didn't occur first\n  eventType === 'mousemove' && trackedTouchCount < 1) {\n    return;\n  } // Remove flag after emulated events are finished\n\n\n  if (isEmulatingMouseEvents && eventType === 'mouseup') {\n    if (trackedTouchCount === 0) {\n      isEmulatingMouseEvents = false;\n    }\n\n    return;\n  }\n\n  var isStartEvent = isStartish(eventType) && isPrimaryPointerDown(domEvent);\n  var isMoveEvent = isMoveish(eventType);\n  var isEndEvent = isEndish(eventType);\n  var isScrollEvent = isScroll(eventType);\n  var isSelectionChangeEvent = isSelectionChange(eventType);\n  var responderEvent = createResponderEvent(domEvent);\n  /**\n   * Record the state of active pointers\n   */\n\n  if (isStartEvent || isMoveEvent || isEndEvent) {\n    if (domEvent.touches) {\n      trackedTouchCount = domEvent.touches.length;\n    } else {\n      if (isStartEvent) {\n        trackedTouchCount = 1;\n      } else if (isEndEvent) {\n        trackedTouchCount = 0;\n      }\n    }\n\n    ResponderTouchHistoryStore.recordTouchTrack(eventType, responderEvent.nativeEvent);\n  }\n  /**\n   * Responder System logic\n   */\n\n\n  var eventPaths = getResponderPaths(domEvent);\n  var wasNegotiated = false;\n  var wantsResponder; // If an event occured that might change the current responder...\n\n  if (isStartEvent || isMoveEvent || isScrollEvent && trackedTouchCount > 0) {\n    // If there is already a responder, prune the event paths to the lowest common ancestor\n    // of the existing responder and deepest target of the event.\n    var currentResponderIdPath = currentResponder.idPath;\n    var eventIdPath = eventPaths.idPath;\n\n    if (currentResponderIdPath != null && eventIdPath != null) {\n      var lowestCommonAncestor = getLowestCommonAncestor(currentResponderIdPath, eventIdPath);\n\n      if (lowestCommonAncestor != null) {\n        var indexOfLowestCommonAncestor = eventIdPath.indexOf(lowestCommonAncestor); // Skip the current responder so it doesn't receive unexpected \"shouldSet\" events.\n\n        var index = indexOfLowestCommonAncestor + (lowestCommonAncestor === currentResponder.id ? 1 : 0);\n        eventPaths = {\n          idPath: eventIdPath.slice(index),\n          nodePath: eventPaths.nodePath.slice(index)\n        };\n      } else {\n        eventPaths = null;\n      }\n    }\n\n    if (eventPaths != null) {\n      // If a node wants to become the responder, attempt to transfer.\n      wantsResponder = findWantsResponder(eventPaths, domEvent, responderEvent);\n\n      if (wantsResponder != null) {\n        // Sets responder if none exists, or negotates with existing responder.\n        attemptTransfer(responderEvent, wantsResponder);\n        wasNegotiated = true;\n      }\n    }\n  } // If there is now a responder, invoke its callbacks for the lifecycle of the gesture.\n\n\n  if (currentResponder.id != null && currentResponder.node != null) {\n    var _currentResponder = currentResponder,\n        id = _currentResponder.id,\n        node = _currentResponder.node;\n\n    var _getResponderConfig = getResponderConfig(id),\n        onResponderStart = _getResponderConfig.onResponderStart,\n        onResponderMove = _getResponderConfig.onResponderMove,\n        onResponderEnd = _getResponderConfig.onResponderEnd,\n        onResponderRelease = _getResponderConfig.onResponderRelease,\n        onResponderTerminate = _getResponderConfig.onResponderTerminate,\n        onResponderTerminationRequest = _getResponderConfig.onResponderTerminationRequest;\n\n    responderEvent.bubbles = false;\n    responderEvent.cancelable = false;\n    responderEvent.currentTarget = node; // Start\n\n    if (isStartEvent) {\n      if (onResponderStart != null) {\n        responderEvent.dispatchConfig.registrationName = 'onResponderStart';\n        onResponderStart(responderEvent);\n      }\n    } // Move\n    else if (isMoveEvent) {\n        if (onResponderMove != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderMove';\n          onResponderMove(responderEvent);\n        }\n      } else {\n        var isTerminateEvent = isCancelish(eventType) || // native context menu\n        eventType === 'contextmenu' || // window blur\n        eventType === 'blur' && eventTarget === window || // responder (or ancestors) blur\n        eventType === 'blur' && eventTarget.contains(node) && domEvent.relatedTarget !== node || // native scroll without using a pointer\n        isScrollEvent && trackedTouchCount === 0 || // native scroll on node that is parent of the responder (allow siblings to scroll)\n        isScrollEvent && eventTarget.contains(node) && eventTarget !== node || // native select/selectionchange on node\n        isSelectionChangeEvent && hasValidSelection(domEvent);\n        var isReleaseEvent = isEndEvent && !isTerminateEvent && !hasTargetTouches(node, domEvent.touches); // End\n\n        if (isEndEvent) {\n          if (onResponderEnd != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderEnd';\n            onResponderEnd(responderEvent);\n          }\n        } // Release\n\n\n        if (isReleaseEvent) {\n          if (onResponderRelease != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderRelease';\n            onResponderRelease(responderEvent);\n          }\n\n          changeCurrentResponder(emptyResponder);\n        } // Terminate\n\n\n        if (isTerminateEvent) {\n          var shouldTerminate = true; // Responders can still avoid termination but only for these events.\n\n          if (eventType === 'contextmenu' || eventType === 'scroll' || eventType === 'selectionchange') {\n            // Only call this function is it wasn't already called during negotiation.\n            if (wasNegotiated) {\n              shouldTerminate = false;\n            } else if (onResponderTerminationRequest != null) {\n              responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n\n              if (onResponderTerminationRequest(responderEvent) === false) {\n                shouldTerminate = false;\n              }\n            }\n          }\n\n          if (shouldTerminate) {\n            if (onResponderTerminate != null) {\n              responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n              onResponderTerminate(responderEvent);\n            }\n\n            changeCurrentResponder(emptyResponder);\n            isEmulatingMouseEvents = false;\n            trackedTouchCount = 0;\n          }\n        }\n      }\n  }\n}\n/**\n * Walk the event path to/from the target node. At each node, stop and call the\n * relevant \"shouldSet\" functions for the given event type. If any of those functions\n * call \"stopPropagation\" on the event, stop searching for a responder.\n */\n\n\nfunction findWantsResponder(eventPaths, domEvent, responderEvent) {\n  var shouldSetCallbacks = shouldSetResponderEvents[domEvent.type]; // for Flow\n\n  if (shouldSetCallbacks != null) {\n    var idPath = eventPaths.idPath,\n        nodePath = eventPaths.nodePath;\n    var shouldSetCallbackCaptureName = shouldSetCallbacks[0];\n    var shouldSetCallbackBubbleName = shouldSetCallbacks[1];\n    var bubbles = shouldSetCallbacks[2].bubbles;\n\n    var check = function check(id, node, callbackName) {\n      var config = getResponderConfig(id);\n      var shouldSetCallback = config[callbackName];\n\n      if (shouldSetCallback != null) {\n        responderEvent.currentTarget = node;\n\n        if (shouldSetCallback(responderEvent) === true) {\n          // Start the path from the potential responder\n          var prunedIdPath = idPath.slice(idPath.indexOf(id));\n          return {\n            id: id,\n            node: node,\n            idPath: prunedIdPath\n          };\n        }\n      }\n    }; // capture\n\n\n    for (var i = idPath.length - 1; i >= 0; i--) {\n      var id = idPath[i];\n      var node = nodePath[i];\n      var result = check(id, node, shouldSetCallbackCaptureName);\n\n      if (result != null) {\n        return result;\n      }\n\n      if (responderEvent.isPropagationStopped() === true) {\n        return;\n      }\n    } // bubble\n\n\n    if (bubbles) {\n      for (var _i = 0; _i < idPath.length; _i++) {\n        var _id = idPath[_i];\n        var _node = nodePath[_i];\n\n        var _result = check(_id, _node, shouldSetCallbackBubbleName);\n\n        if (_result != null) {\n          return _result;\n        }\n\n        if (responderEvent.isPropagationStopped() === true) {\n          return;\n        }\n      }\n    } else {\n      var _id2 = idPath[0];\n      var _node2 = nodePath[0];\n      var target = domEvent.target;\n\n      if (target === _node2) {\n        return check(_id2, _node2, shouldSetCallbackBubbleName);\n      }\n    }\n  }\n}\n/**\n * Attempt to transfer the responder.\n */\n\n\nfunction attemptTransfer(responderEvent, wantsResponder) {\n  var _currentResponder2 = currentResponder,\n      currentId = _currentResponder2.id,\n      currentNode = _currentResponder2.node;\n  var id = wantsResponder.id,\n      node = wantsResponder.node;\n\n  var _getResponderConfig2 = getResponderConfig(id),\n      onResponderGrant = _getResponderConfig2.onResponderGrant,\n      onResponderReject = _getResponderConfig2.onResponderReject;\n\n  responderEvent.bubbles = false;\n  responderEvent.cancelable = false;\n  responderEvent.currentTarget = node; // Set responder\n\n  if (currentId == null) {\n    if (onResponderGrant != null) {\n      responderEvent.currentTarget = node;\n      responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n      onResponderGrant(responderEvent);\n    }\n\n    changeCurrentResponder(wantsResponder);\n  } // Negotiate with current responder\n  else {\n      var _getResponderConfig3 = getResponderConfig(currentId),\n          onResponderTerminate = _getResponderConfig3.onResponderTerminate,\n          onResponderTerminationRequest = _getResponderConfig3.onResponderTerminationRequest;\n\n      var allowTransfer = true;\n\n      if (onResponderTerminationRequest != null) {\n        responderEvent.currentTarget = currentNode;\n        responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n\n        if (onResponderTerminationRequest(responderEvent) === false) {\n          allowTransfer = false;\n        }\n      }\n\n      if (allowTransfer) {\n        // Terminate existing responder\n        if (onResponderTerminate != null) {\n          responderEvent.currentTarget = currentNode;\n          responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n          onResponderTerminate(responderEvent);\n        } // Grant next responder\n\n\n        if (onResponderGrant != null) {\n          responderEvent.currentTarget = node;\n          responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n          onResponderGrant(responderEvent);\n        }\n\n        changeCurrentResponder(wantsResponder);\n      } else {\n        // Reject responder request\n        if (onResponderReject != null) {\n          responderEvent.currentTarget = node;\n          responderEvent.dispatchConfig.registrationName = 'onResponderReject';\n          onResponderReject(responderEvent);\n        }\n      }\n    }\n}\n/* ------------ PUBLIC API ------------ */\n\n/**\n * Attach Listeners\n *\n * Use native events as ReactDOM doesn't have a non-plugin API to implement\n * this system.\n */\n\n\nvar documentEventsCapturePhase = ['blur', 'scroll'];\nvar documentEventsBubblePhase = [// mouse\n'mousedown', 'mousemove', 'mouseup', 'dragstart', // touch\n'touchstart', 'touchmove', 'touchend', 'touchcancel', // other\n'contextmenu', 'select', 'selectionchange'];\nexport function attachListeners() {\n  if (canUseDOM && window.__reactResponderSystemActive == null) {\n    window.addEventListener('blur', eventListener);\n    documentEventsBubblePhase.forEach(function (eventType) {\n      document.addEventListener(eventType, eventListener);\n    });\n    documentEventsCapturePhase.forEach(function (eventType) {\n      document.addEventListener(eventType, eventListener, true);\n    });\n    window.__reactResponderSystemActive = true;\n  }\n}\n/**\n * Register a node with the ResponderSystem.\n */\n\nexport function addNode(id, node, config) {\n  setResponderId(node, id);\n  responderListenersMap.set(id, config);\n}\n/**\n * Unregister a node with the ResponderSystem.\n */\n\nexport function removeNode(id) {\n  if (currentResponder.id === id) {\n    terminateResponder();\n  }\n\n  if (responderListenersMap.has(id)) {\n    responderListenersMap.delete(id);\n  }\n}\n/**\n * Allow the current responder to be terminated from within components to support\n * more complex requirements, such as use with other React libraries for working\n * with scroll views, input views, etc.\n */\n\nexport function terminateResponder() {\n  var _currentResponder3 = currentResponder,\n      id = _currentResponder3.id,\n      node = _currentResponder3.node;\n\n  if (id != null && node != null) {\n    var _getResponderConfig4 = getResponderConfig(id),\n        onResponderTerminate = _getResponderConfig4.onResponderTerminate;\n\n    if (onResponderTerminate != null) {\n      var event = createResponderEvent({});\n      event.currentTarget = node;\n      onResponderTerminate(event);\n    }\n\n    changeCurrentResponder(emptyResponder);\n  }\n\n  isEmulatingMouseEvents = false;\n  trackedTouchCount = 0;\n}\n/**\n * Allow unit tests to inspect the current responder in the system.\n * FOR TESTING ONLY.\n */\n\nexport function getResponderNode() {\n  return currentResponder.node;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}