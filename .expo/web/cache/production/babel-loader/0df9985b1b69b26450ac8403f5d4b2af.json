{"ast":null,"code":"'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=usePressEvents;var _PressResponder=_interopRequireDefault(require(\"./PressResponder\"));var _react=require(\"react\");function usePressEvents(hostRef,config){var pressResponderRef=(0,_react.useRef)(null);if(pressResponderRef.current==null){pressResponderRef.current=new _PressResponder.default(config);}var pressResponder=pressResponderRef.current;(0,_react.useEffect)(function(){pressResponder.configure(config);},[config,pressResponder]);(0,_react.useEffect)(function(){return function(){pressResponder.reset();};},[pressResponder]);(0,_react.useDebugValue)(config);return pressResponder.getEventHandlers();}","map":{"version":3,"names":["usePressEvents","hostRef","config","pressResponderRef","useRef","current","PressResponder","pressResponder","useEffect","configure","reset","useDebugValue","getEventHandlers"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-web/dist/modules/usePressEvents/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  useEffect(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  useEffect(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}"],"mappings":"AASA,a,2KAEA,wEACA,4BACe,QAASA,eAAT,CAAwBC,OAAxB,CAAiCC,MAAjC,CAAyC,CACtD,GAAIC,kBAAiB,CAAG,GAAAC,aAAA,EAAO,IAAP,CAAxB,CAEA,GAAID,iBAAiB,CAACE,OAAlB,EAA6B,IAAjC,CAAuC,CACrCF,iBAAiB,CAACE,OAAlB,CAA4B,GAAIC,wBAAJ,CAAmBJ,MAAnB,CAA5B,CACD,CAED,GAAIK,eAAc,CAAGJ,iBAAiB,CAACE,OAAvC,CAEA,GAAAG,gBAAA,EAAU,UAAY,CACpBD,cAAc,CAACE,SAAf,CAAyBP,MAAzB,EACD,CAFD,CAEG,CAACA,MAAD,CAASK,cAAT,CAFH,EAKA,GAAAC,gBAAA,EAAU,UAAY,CACpB,MAAO,WAAY,CACjBD,cAAc,CAACG,KAAf,GACD,CAFD,CAGD,CAJD,CAIG,CAACH,cAAD,CAJH,EAKA,GAAAI,oBAAA,EAAcT,MAAd,EACA,MAAOK,eAAc,CAACK,gBAAf,EAAP,CACD"},"metadata":{},"sourceType":"script"}