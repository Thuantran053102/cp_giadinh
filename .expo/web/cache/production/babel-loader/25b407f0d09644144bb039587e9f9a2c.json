{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.updatePropsJestWrapper=exports.updateProps=exports.default=exports.colorProps=exports.ColorProperties=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _Colors=require(\"./Colors\");var _core=require(\"./core\");var _jsReanimated=require(\"./js-reanimated\");var _PlatformChecker=require(\"./PlatformChecker\");var colorProps=['backgroundColor','borderBottomColor','borderColor','borderLeftColor','borderRightColor','borderTopColor','borderStartColor','borderEndColor','color','shadowColor','textDecorationColor','tintColor','textShadowColor','overlayColor'];exports.colorProps=colorProps;var ColorProperties=!(0,_core.isConfigured)()?[]:(0,_core.makeShareable)(colorProps);exports.ColorProperties=ColorProperties;var updatePropsByPlatform;if((0,_PlatformChecker.shouldBeUseWeb)()){updatePropsByPlatform=function updatePropsByPlatform(_,updates,maybeViewRef){'worklet';if(maybeViewRef){maybeViewRef.items.forEach(function(item,_){(0,_jsReanimated._updatePropsJS)(updates,item);});}};}else{updatePropsByPlatform=function updatePropsByPlatform(viewDescriptors,updates,_){'worklet';for(var key in updates){if(ColorProperties.indexOf(key)!==-1){updates[key]=(0,_Colors.processColor)(updates[key]);}}viewDescriptors.value.forEach(function(viewDescriptor){_updateProps(viewDescriptor.tag,viewDescriptor.name||'RCTView',updates);});};}var updateProps=updatePropsByPlatform;exports.updateProps=updateProps;var updatePropsJestWrapper=function updatePropsJestWrapper(viewDescriptors,updates,maybeViewRef,animatedStyle,adapters){adapters.forEach(function(adapter){adapter(updates);});animatedStyle.current.value=(0,_extends2.default)((0,_extends2.default)({},animatedStyle.current.value),updates);updateProps(viewDescriptors,updates,maybeViewRef);};exports.updatePropsJestWrapper=updatePropsJestWrapper;var _default=updateProps;exports.default=_default;","map":{"version":3,"names":["colorProps","ColorProperties","isConfigured","makeShareable","updatePropsByPlatform","shouldBeUseWeb","_","updates","maybeViewRef","items","forEach","item","_updatePropsJS","viewDescriptors","key","indexOf","processColor","value","viewDescriptor","_updateProps","tag","name","updateProps","updatePropsJestWrapper","animatedStyle","adapters","adapter","current"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-reanimated/lib/reanimated2/UpdateProps.js"],"sourcesContent":["import { processColor } from './Colors';\nimport { makeShareable, isConfigured } from './core';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const colorProps = [\n    'backgroundColor',\n    'borderBottomColor',\n    'borderColor',\n    'borderLeftColor',\n    'borderRightColor',\n    'borderTopColor',\n    'borderStartColor',\n    'borderEndColor',\n    'color',\n    'shadowColor',\n    'textDecorationColor',\n    'tintColor',\n    'textShadowColor',\n    'overlayColor',\n];\nexport const ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\nlet updatePropsByPlatform;\nif (shouldBeUseWeb()) {\n    updatePropsByPlatform = (_, updates, maybeViewRef) => {\n        'worklet';\n        if (maybeViewRef) {\n            maybeViewRef.items.forEach((item, _) => {\n                _updatePropsJS(updates, item);\n            });\n        }\n    };\n}\nelse {\n    updatePropsByPlatform = (viewDescriptors, updates, _) => {\n        'worklet';\n        for (const key in updates) {\n            if (ColorProperties.indexOf(key) !== -1) {\n                updates[key] = processColor(updates[key]);\n            }\n        }\n        viewDescriptors.value.forEach((viewDescriptor) => {\n            _updateProps(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\n        });\n    };\n}\nexport const updateProps = updatePropsByPlatform;\nexport const updatePropsJestWrapper = (viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) => {\n    adapters.forEach((adapter) => {\n        adapter(updates);\n    });\n    animatedStyle.current.value = Object.assign(Object.assign({}, animatedStyle.current.value), updates);\n    updateProps(viewDescriptors, updates, maybeViewRef);\n};\nexport default updateProps;\n"],"mappings":"iVAAA,gCACA,4BACA,6CACA,kDAEO,GAAMA,WAAU,CAAG,CACtB,iBADsB,CAEtB,mBAFsB,CAGtB,aAHsB,CAItB,iBAJsB,CAKtB,kBALsB,CAMtB,gBANsB,CAOtB,kBAPsB,CAQtB,gBARsB,CAStB,OATsB,CAUtB,aAVsB,CAWtB,qBAXsB,CAYtB,WAZsB,CAatB,iBAbsB,CActB,cAdsB,CAAnB,C,8BAgBA,GAAMC,gBAAe,CAAG,CAAC,GAAAC,kBAAA,GAAD,CAAkB,EAAlB,CAAuB,GAAAC,mBAAA,EAAcH,UAAd,CAA/C,C,wCACP,GAAII,sBAAJ,CACA,GAAI,GAAAC,+BAAA,GAAJ,CAAsB,CAClBD,qBAAqB,CAAG,+BAACE,CAAD,CAAIC,OAAJ,CAAaC,YAAb,CAA8B,CAClD,UACA,GAAIA,YAAJ,CAAkB,CACdA,YAAY,CAACC,KAAb,CAAmBC,OAAnB,CAA2B,SAACC,IAAD,CAAOL,CAAP,CAAa,CACpC,GAAAM,4BAAA,EAAeL,OAAf,CAAwBI,IAAxB,EACH,CAFD,EAGH,CACJ,CAPD,CAQH,CATD,IAUK,CACDP,qBAAqB,CAAG,+BAACS,eAAD,CAAkBN,OAAlB,CAA2BD,CAA3B,CAAiC,CACrD,UACA,IAAK,GAAMQ,IAAX,GAAkBP,QAAlB,CAA2B,CACvB,GAAIN,eAAe,CAACc,OAAhB,CAAwBD,GAAxB,IAAiC,CAAC,CAAtC,CAAyC,CACrCP,OAAO,CAACO,GAAD,CAAP,CAAe,GAAAE,oBAAA,EAAaT,OAAO,CAACO,GAAD,CAApB,CAAf,CACH,CACJ,CACDD,eAAe,CAACI,KAAhB,CAAsBP,OAAtB,CAA8B,SAACQ,cAAD,CAAoB,CAC9CC,YAAY,CAACD,cAAc,CAACE,GAAhB,CAAqBF,cAAc,CAACG,IAAf,EAAuB,SAA5C,CAAuDd,OAAvD,CAAZ,CACH,CAFD,EAGH,CAVD,CAWH,CACM,GAAMe,YAAW,CAAGlB,qBAApB,C,gCACA,GAAMmB,uBAAsB,CAAG,QAAzBA,uBAAyB,CAACV,eAAD,CAAkBN,OAAlB,CAA2BC,YAA3B,CAAyCgB,aAAzC,CAAwDC,QAAxD,CAAqE,CACvGA,QAAQ,CAACf,OAAT,CAAiB,SAACgB,OAAD,CAAa,CAC1BA,OAAO,CAACnB,OAAD,CAAP,CACH,CAFD,EAGAiB,aAAa,CAACG,OAAd,CAAsBV,KAAtB,CAA8B,sBAAc,sBAAc,EAAd,CAAkBO,aAAa,CAACG,OAAd,CAAsBV,KAAxC,CAAd,CAA8DV,OAA9D,CAA9B,CACAe,WAAW,CAACT,eAAD,CAAkBN,OAAlB,CAA2BC,YAA3B,CAAX,CACH,CANM,C,mEAOQc,W"},"metadata":{},"sourceType":"script"}