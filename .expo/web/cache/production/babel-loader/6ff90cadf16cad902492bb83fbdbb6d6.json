{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useOnPreventRemove;exports.shouldPreventRemove=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _extends3=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var React=_interopRequireWildcard(require(\"react\"));var _NavigationBuilderContext=_interopRequireDefault(require(\"./NavigationBuilderContext\"));var _NavigationRouteContext=_interopRequireDefault(require(\"./NavigationRouteContext\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}var VISITED_ROUTE_KEYS=Symbol('VISITED_ROUTE_KEYS');var shouldPreventRemove=function shouldPreventRemove(emitter,beforeRemoveListeners,currentRoutes,nextRoutes,action){var _action$VISITED_ROUTE;var nextRouteKeys=nextRoutes.map(function(route){return route.key;});var removedRoutes=currentRoutes.filter(function(route){return!nextRouteKeys.includes(route.key);}).reverse();var visitedRouteKeys=(_action$VISITED_ROUTE=action[VISITED_ROUTE_KEYS])!==null&&_action$VISITED_ROUTE!==void 0?_action$VISITED_ROUTE:new Set();var beforeRemoveAction=(0,_extends3.default)({},action,(0,_defineProperty2.default)({},VISITED_ROUTE_KEYS,visitedRouteKeys));for(var _iterator=_createForOfIteratorHelperLoose(removedRoutes),_step;!(_step=_iterator()).done;){var route=_step.value;var _beforeRemoveListener;if(visitedRouteKeys.has(route.key)){continue;}var isPrevented=(_beforeRemoveListener=beforeRemoveListeners[route.key])===null||_beforeRemoveListener===void 0?void 0:_beforeRemoveListener.call(beforeRemoveListeners,beforeRemoveAction);if(isPrevented){return true;}visitedRouteKeys.add(route.key);var event=emitter.emit({type:'beforeRemove',target:route.key,data:{action:beforeRemoveAction},canPreventDefault:true});if(event.defaultPrevented){return true;}}return false;};exports.shouldPreventRemove=shouldPreventRemove;function useOnPreventRemove(_ref){var getState=_ref.getState,emitter=_ref.emitter,beforeRemoveListeners=_ref.beforeRemoveListeners;var _React$useContext=React.useContext(_NavigationBuilderContext.default),addKeyedListener=_React$useContext.addKeyedListener;var route=React.useContext(_NavigationRouteContext.default);var routeKey=route===null||route===void 0?void 0:route.key;React.useEffect(function(){if(routeKey){return addKeyedListener===null||addKeyedListener===void 0?void 0:addKeyedListener('beforeRemove',routeKey,function(action){var state=getState();return shouldPreventRemove(emitter,beforeRemoveListeners,state.routes,[],action);});}},[addKeyedListener,beforeRemoveListeners,emitter,getState,routeKey]);}","map":{"version":3,"sources":["useOnPreventRemove.tsx"],"names":["VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","nextRouteKeys","nextRoutes","route","removedRoutes","currentRoutes","visitedRouteKeys","action","beforeRemoveAction","isPrevented","beforeRemoveListeners","event","type","target","data","canPreventDefault","addKeyedListener","React","routeKey","state","getState"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type {\n  NavigationState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport type { EventMapCore } from './types';\n\ntype Options = {\n  getState: () => NavigationState;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n};\n\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nexport const shouldPreventRemove = (\n  emitter: NavigationEventEmitter<EventMapCore<any>>,\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,\n  currentRoutes: { key: string }[],\n  nextRoutes: { key?: string | undefined }[],\n  action: NavigationAction\n) => {\n  const nextRouteKeys = nextRoutes.map((route) => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes\n    .filter((route) => !nextRouteKeys.includes(route.key))\n    .reverse();\n\n  const visitedRouteKeys: Set<string> =\n    // @ts-expect-error: add this property to mark that we've already emitted this action\n    action[VISITED_ROUTE_KEYS] ?? new Set<string>();\n\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys,\n  };\n\n  for (const route of removedRoutes) {\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = beforeRemoveListeners[route.key]?.(beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: { action: beforeRemoveAction },\n      canPreventDefault: true,\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default function useOnPreventRemove({\n  getState,\n  emitter,\n  beforeRemoveListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route?.key;\n\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener?.('beforeRemove', routeKey, (action) => {\n        const state = getState();\n\n        return shouldPreventRemove(\n          emitter,\n          beforeRemoveListeners,\n          state.routes,\n          [],\n          action\n        );\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n"]},"metadata":{},"sourceType":"script"}