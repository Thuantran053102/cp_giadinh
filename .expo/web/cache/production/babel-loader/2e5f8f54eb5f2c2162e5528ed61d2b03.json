{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.ManualGesture=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _gesture=require(\"./gesture\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function changeEventCalculator(current,_previous){'worklet';return current;}var ManualGesture=function(_ContinousBaseGesture){(0,_inherits2.default)(ManualGesture,_ContinousBaseGesture);var _super=_createSuper(ManualGesture);function ManualGesture(){var _this;(0,_classCallCheck2.default)(this,ManualGesture);_this=_super.call(this);_this.handlerName='ManualGestureHandler';return _this;}(0,_createClass2.default)(ManualGesture,[{key:\"onChange\",value:function onChange(callback){this.handlers.changeEventCalculator=changeEventCalculator;return(0,_get2.default)((0,_getPrototypeOf2.default)(ManualGesture.prototype),\"onChange\",this).call(this,callback);}}]);return ManualGesture;}(_gesture.ContinousBaseGesture);exports.ManualGesture=ManualGesture;","map":{"version":3,"sources":["manualGesture.ts"],"names":["constructor","onChange"],"mappings":"2sBACA,kC,wtBAEA,QAAA,sBAAA,CAAA,OAAA,CAAA,SAAA,CAGE,CACA,UACA,MAAA,QAAA,CACD,C,GAEM,c,oIAILA,wBAAc,4DACZ,wBAEA,MAAA,WAAA,CAAA,sBAAA,CAHY,aAIb,C,+DAEDC,kBAAQ,QAARA,CAEE,CAEA,KAAA,QAAA,CAAA,qBAAA,CAAA,qBAAA,CACA,yGAAA,QAAA,EACD,C,2BAhBI,6B","sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"]},"metadata":{},"sourceType":"script"}