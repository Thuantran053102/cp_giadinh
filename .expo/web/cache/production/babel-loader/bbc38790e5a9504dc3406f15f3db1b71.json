{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.useAnimatedProps=void 0;Object.defineProperty(exports,\"useEvent\",{enumerable:true,get:function get(){return _utils.useEvent;}});Object.defineProperty(exports,\"useHandler\",{enumerable:true,get:function get(){return _utils.useHandler;}});exports.useWorkletCallback=useWorkletCallback;var _react=require(\"react\");var _useAnimatedStyle=require(\"./useAnimatedStyle\");var _utils=require(\"./utils\");var useAnimatedProps=_useAnimatedStyle.useAnimatedStyle;exports.useAnimatedProps=useAnimatedProps;function useWorkletCallback(fun,deps){return(0,_react.useCallback)(fun,deps!==null&&deps!==void 0?deps:[]);}","map":{"version":3,"names":["useAnimatedProps","useAnimatedStyle","useWorkletCallback","fun","deps","useCallback"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-reanimated/lib/reanimated2/hook/Hooks.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useAnimatedStyle } from './useAnimatedStyle';\n// TODO: we should make sure that when useAP is used we are not assigning styles\n// when you need styles to animated you should always use useAS\nexport const useAnimatedProps = useAnimatedStyle;\nexport function useWorkletCallback(fun, deps) {\n    return useCallback(fun, deps !== null && deps !== void 0 ? deps : []);\n}\nexport { useEvent, useHandler } from './utils';\n"],"mappings":"2VAAA,4BACA,oDAOA,8BAJO,GAAMA,iBAAgB,CAAGC,kCAAzB,C,0CACA,QAASC,mBAAT,CAA4BC,GAA5B,CAAiCC,IAAjC,CAAuC,CAC1C,MAAO,GAAAC,kBAAA,EAAYF,GAAZ,CAAiBC,IAAI,GAAK,IAAT,EAAiBA,IAAI,GAAK,IAAK,EAA/B,CAAmCA,IAAnC,CAA0C,EAA3D,CAAP,CACH"},"metadata":{},"sourceType":"script"}