{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.getTag=getTag;exports.measure=measure;exports.scrollTo=scrollTo;exports.setGestureState=setGestureState;var _reactNative=require(\"react-native\");var _PlatformChecker=require(\"./PlatformChecker\");function getTag(view){return(0,_reactNative.findNodeHandle)(view);}function measure(animatedRef){'worklet';if(!_WORKLET&&!(0,_PlatformChecker.isChromeDebugger)()){throw new Error('(measure) method cannot be used on RN side!');}var viewTag=animatedRef();var result=_measure(viewTag);if(result.x===-1234567){throw new Error(\"The view with tag \"+viewTag+\" could not be measured\");}return result;}function scrollTo(animatedRef,x,y,animated){'worklet';if(!_WORKLET&&!(0,_PlatformChecker.isChromeDebugger)()){return;}var viewTag=animatedRef();_scrollTo(viewTag,x,y,animated);}function setGestureState(handlerTag,newState){'worklet';if(!_WORKLET&&!(0,_PlatformChecker.isChromeDebugger)()){console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');}_setGestureState(handlerTag,newState);}","map":{"version":3,"names":["getTag","view","findNodeHandle","measure","animatedRef","_WORKLET","isChromeDebugger","Error","viewTag","result","_measure","x","scrollTo","y","animated","_scrollTo","setGestureState","handlerTag","newState","console","warn","_setGestureState"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js"],"sourcesContent":["import { findNodeHandle } from 'react-native';\nimport { isChromeDebugger } from './PlatformChecker';\nexport function getTag(view) {\n    return findNodeHandle(view);\n}\nexport function measure(animatedRef) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        throw new Error('(measure) method cannot be used on RN side!');\n    }\n    const viewTag = animatedRef();\n    const result = _measure(viewTag);\n    if (result.x === -1234567) {\n        throw new Error(`The view with tag ${viewTag} could not be measured`);\n    }\n    return result;\n}\nexport function scrollTo(animatedRef, x, y, animated) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        return;\n    }\n    const viewTag = animatedRef();\n    _scrollTo(viewTag, x, y, animated);\n}\nexport function setGestureState(handlerTag, newState) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n    }\n    _setGestureState(handlerTag, newState);\n}\n"],"mappings":"yKAAA,yCACA,kDACO,QAASA,OAAT,CAAgBC,IAAhB,CAAsB,CACzB,MAAO,GAAAC,2BAAA,EAAeD,IAAf,CAAP,CACH,CACM,QAASE,QAAT,CAAiBC,WAAjB,CAA8B,CACjC,UACA,GAAI,CAACC,QAAD,EAAa,CAAC,GAAAC,iCAAA,GAAlB,CAAsC,CAClC,KAAM,IAAIC,MAAJ,CAAU,6CAAV,CAAN,CACH,CACD,GAAMC,QAAO,CAAGJ,WAAW,EAA3B,CACA,GAAMK,OAAM,CAAGC,QAAQ,CAACF,OAAD,CAAvB,CACA,GAAIC,MAAM,CAACE,CAAP,GAAa,CAAC,OAAlB,CAA2B,CACvB,KAAM,IAAIJ,MAAJ,sBAA+BC,OAA/B,0BAAN,CACH,CACD,MAAOC,OAAP,CACH,CACM,QAASG,SAAT,CAAkBR,WAAlB,CAA+BO,CAA/B,CAAkCE,CAAlC,CAAqCC,QAArC,CAA+C,CAClD,UACA,GAAI,CAACT,QAAD,EAAa,CAAC,GAAAC,iCAAA,GAAlB,CAAsC,CAClC,OACH,CACD,GAAME,QAAO,CAAGJ,WAAW,EAA3B,CACAW,SAAS,CAACP,OAAD,CAAUG,CAAV,CAAaE,CAAb,CAAgBC,QAAhB,CAAT,CACH,CACM,QAASE,gBAAT,CAAyBC,UAAzB,CAAqCC,QAArC,CAA+C,CAClD,UACA,GAAI,CAACb,QAAD,EAAa,CAAC,GAAAC,iCAAA,GAAlB,CAAsC,CAClCa,OAAO,CAACC,IAAR,CAAa,uEAAb,EACH,CACDC,gBAAgB,CAACJ,UAAD,CAAaC,QAAb,CAAhB,CACH"},"metadata":{},"sourceType":"script"}