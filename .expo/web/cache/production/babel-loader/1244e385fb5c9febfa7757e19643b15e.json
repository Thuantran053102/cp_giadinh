{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=gestureHandlerRootHOC;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _hoistNonReactStatics=_interopRequireDefault(require(\"hoist-non-react-statics\"));var _GestureHandlerRootView=_interopRequireDefault(require(\"./GestureHandlerRootView\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function gestureHandlerRootHOC(Component,containerStyles){function Wrapper(props){return React.createElement(_GestureHandlerRootView.default,{style:[styles.container,containerStyles]},React.createElement(Component,props));}Wrapper.displayName=\"gestureHandlerRootHOC(\"+(Component.displayName||Component.name)+\")\";(0,_hoistNonReactStatics.default)(Wrapper,Component);return Wrapper;}var styles=_reactNative.StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["gestureHandlerRootHOC.tsx"],"names":["styles","Wrapper","Component","hoistNonReactStatics","container","flex"],"mappings":"kLAAA,oDACA,yCACA,qFACA,wF,0/BAEe,QAAA,sBAAA,CAAA,SAAA,CAAA,eAAA,CAGW,CACxB,QAAA,QAAA,CAAA,KAAA,CAA2B,CACzB,MACE,MAAA,CAAA,aAAA,CAAA,+BAAA,CAAA,CAAwB,KAAK,CAAE,CAACA,MAAM,CAAP,SAAA,CAAA,eAAA,CAA/B,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,SAAA,CAFJ,KAEI,CADF,CADF,CAKD,CAEDC,OAAO,CAAPA,WAAAA,2BACEC,SAAS,CAATA,WAAAA,EAAyBA,SAAS,CADpCD,IAAAA,MAIAE,GAAAA,6BAAAA,EAAoB,OAApBA,CAAAA,SAAAA,EAEA,MAAA,QAAA,CACD,CAED,GAAMH,OAAM,CAAG,uBAAA,CAAA,MAAA,CAAkB,CAC/BI,SAAS,CAAE,CAAEC,IAAI,CAAE,CAAR,CADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\nexport default function gestureHandlerRootHOC<P>(\n  Component: React.ComponentType<P>,\n  containerStyles?: StyleProp<ViewStyle>\n): React.ComponentType<P> {\n  function Wrapper(props: P) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${\n    Component.displayName || Component.name\n  })`;\n\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n"]},"metadata":{},"sourceType":"script"}