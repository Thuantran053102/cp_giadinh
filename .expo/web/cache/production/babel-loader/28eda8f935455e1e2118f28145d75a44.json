{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useBackButton;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function useBackButton(ref){React.useEffect(function(){var subscription=_reactNative.BackHandler.addEventListener('hardwareBackPress',function(){var navigation=ref.current;if(navigation==null){return false;}if(navigation.canGoBack()){navigation.goBack();return true;}return false;});return function(){return subscription.remove();};},[ref]);}","map":{"version":3,"sources":["useBackButton.tsx"],"names":["React","subscription","navigation","ref"],"mappings":"uFAAA,oDACA,yC,0/BAGe,QAAA,cAAA,CAAA,GAAA,CAEb,CACAA,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,GAAMC,aAAY,CAAG,wBAAA,CAAA,gBAAA,CAAA,mBAAA,CAEnB,UAAM,CACJ,GAAMC,WAAU,CAAGC,GAAG,CAAtB,OAAA,CAEA,GAAID,UAAU,EAAd,IAAA,CAAwB,CACtB,MAAA,MAAA,CACD,CAED,GAAIA,UAAU,CAAd,SAAIA,EAAJ,CAA4B,CAC1BA,UAAU,CAAVA,MAAAA,GAEA,MAAA,KAAA,CACD,CAED,MAAA,MAAA,CAfJ,CAAqB,CAArB,CAmBA,MAAO,kBAAMD,aAAY,CAAzB,MAAaA,EAAN,EAAP,CApBFD,CAAAA,CAqBG,CArBHA,GAqBG,CArBHA,EAsBD","sourcesContent":["import * as React from 'react';\nimport { BackHandler } from 'react-native';\nimport type { NavigationContainerRef } from '@react-navigation/core';\n\nexport default function useBackButton(\n  ref: React.RefObject<NavigationContainerRef>\n) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      () => {\n        const navigation = ref.current;\n\n        if (navigation == null) {\n          return false;\n        }\n\n        if (navigation.canGoBack()) {\n          navigation.goBack();\n\n          return true;\n        }\n\n        return false;\n      }\n    );\n\n    return () => subscription.remove();\n  }, [ref]);\n}\n"]},"metadata":{},"sourceType":"script"}