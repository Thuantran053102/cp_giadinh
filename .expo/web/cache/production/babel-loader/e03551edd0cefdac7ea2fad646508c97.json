{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=getNextTriggerDateAsync;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _expoModulesCore=require(\"expo-modules-core\");var _NotificationScheduler=_interopRequireDefault(require(\"./NotificationScheduler\"));var _scheduleNotificationAsync=require(\"./scheduleNotificationAsync\");function getNextTriggerDateAsync(trigger){return _regenerator.default.async(function getNextTriggerDateAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(_NotificationScheduler.default.getNextTriggerDateAsync){_context.next=2;break;}throw new _expoModulesCore.UnavailabilityError('ExpoNotifications','getNextTriggerDateAsync');case 2:_context.next=4;return _regenerator.default.awrap(_NotificationScheduler.default.getNextTriggerDateAsync((0,_scheduleNotificationAsync.parseTrigger)(trigger)));case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/getNextTriggerDateAsync.ts"],"names":[],"mappings":"mQAAA,kDAEA,sFAEA,sEAEe,QAAe,wBAAf,CACb,OADa,uIAGR,8BAAA,CAAsB,uBAHd,8BAIL,IAAI,qCAAJ,CAAwB,mBAAxB,CAA6C,yBAA7C,CAJK,0DAOA,8BAAA,CAAsB,uBAAtB,CAA8C,GAAA,uCAAA,EAAa,OAAb,CAA9C,CAPA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { SchedulableNotificationTriggerInput } from './Notifications.types';\nimport { parseTrigger } from './scheduleNotificationAsync';\n\nexport default async function getNextTriggerDateAsync(\n  trigger: SchedulableNotificationTriggerInput\n): Promise<number | null> {\n  if (!NotificationScheduler.getNextTriggerDateAsync) {\n    throw new UnavailabilityError('ExpoNotifications', 'getNextTriggerDateAsync');\n  }\n\n  return await NotificationScheduler.getNextTriggerDateAsync(parseTrigger(trigger));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}