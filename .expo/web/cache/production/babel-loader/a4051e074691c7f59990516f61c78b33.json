{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useOnGetState;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var React=_interopRequireWildcard(require(\"react\"));var _NavigationBuilderContext=_interopRequireDefault(require(\"./NavigationBuilderContext\"));var _NavigationRouteContext=_interopRequireDefault(require(\"./NavigationRouteContext\"));var _isArrayEqual=_interopRequireDefault(require(\"./isArrayEqual\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function useOnGetState(_ref){var getState=_ref.getState,getStateListeners=_ref.getStateListeners;var _React$useContext=React.useContext(_NavigationBuilderContext.default),addKeyedListener=_React$useContext.addKeyedListener;var route=React.useContext(_NavigationRouteContext.default);var key=route?route.key:'root';var getRehydratedState=React.useCallback(function(){var state=getState();var routes=state.routes.map(function(route){var _getStateListeners$ro;var childState=(_getStateListeners$ro=getStateListeners[route.key])===null||_getStateListeners$ro===void 0?void 0:_getStateListeners$ro.call(getStateListeners);if(route.state===childState){return route;}return(0,_extends2.default)({},route,{state:childState});});if((0,_isArrayEqual.default)(state.routes,routes)){return state;}return(0,_extends2.default)({},state,{routes:routes});},[getState,getStateListeners]);React.useEffect(function(){return addKeyedListener===null||addKeyedListener===void 0?void 0:addKeyedListener('getState',key,getRehydratedState);},[addKeyedListener,getRehydratedState,key]);}","map":{"version":3,"sources":["useOnGetState.tsx"],"names":["getStateListeners","addKeyedListener","React","route","key","getRehydratedState","state","getState","routes","childState","isArrayEqual"],"mappings":"0PAAA,oDAEA,4FAGA,wFACA,oE,0/BAOe,QAAA,cAAA,MAGH,IAH0B,SAG1B,MAH0B,QAG1B,CADVA,iBACU,MADVA,iBACU,CACV,sBAA6BE,KAAK,CAALA,UAAAA,CAA7B,iCAA6BA,CAA7B,CAAQD,gBAAR,mBAAQA,gBAAR,CACA,GAAME,MAAK,CAAGD,KAAK,CAALA,UAAAA,CAAd,+BAAcA,CAAd,CACA,GAAME,IAAG,CAAGD,KAAK,CAAGA,KAAK,CAAR,GAAA,CAAjB,MAAA,CAEA,GAAME,mBAAkB,CAAG,KAAK,CAAL,WAAA,CAAkB,UAAM,CACjD,GAAMC,MAAK,CAAGC,QADmC,EACjD,CAGA,GAAMC,OAAM,CAAG,KAAK,CAAL,MAAA,CAAA,GAAA,CAAkBL,SAAAA,KAAD,CAAW,CAAA,GAAA,sBAAA,CACzC,GAAMM,WAAU,CAAA,CAAA,qBAAA,CAAGT,iBAAiB,CAACG,KAAK,CAA1B,GAAoB,CAApB,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAGH,qBAAAA,CAAAA,IAAAA,CAAnB,iBAAmBA,CAAnB,CAEA,GAAIG,KAAK,CAALA,KAAAA,GAAJ,UAAA,CAAgC,CAC9B,MAAA,MAAA,CACD,CAED,+BAAO,KAAP,EAAmBG,KAAK,CAAEG,UAA1B,GAPF,CAAe,CAAf,CAUA,GAAIC,GAAAA,qBAAAA,EAAaJ,KAAK,CAAN,MAAZI,CAAJ,MAAIA,CAAJ,CAAwC,CACtC,MAAA,MAAA,CACD,CAED,+BAAO,KAAP,EAAmBF,MAAAA,CAAAA,MAAnB,GAlByB,CAAA,CAmBxB,CAAA,QAAA,CAnBH,iBAmBG,CAnBwB,CAA3B,CAqBAN,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,MAAOD,iBAAP,GAAA,IAAOA,EAAAA,gBAAP,GAAA,IAAA,EAAOA,CAAP,IAAA,EAAOA,CAAAA,gBAAgB,CAAA,UAAA,CAAA,GAAA,CAAvB,kBAAuB,CAAvB,CADFC,CAAAA,CAEG,CAAA,gBAAA,CAAA,kBAAA,CAFHA,GAEG,CAFHA,EAGD","sourcesContent":["import * as React from 'react';\nimport type { NavigationState } from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  GetStateListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport isArrayEqual from './isArrayEqual';\n\ntype Options = {\n  getState: () => NavigationState;\n  getStateListeners: Record<string, GetStateListener | undefined>;\n};\n\nexport default function useOnGetState({\n  getState,\n  getStateListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map((route) => {\n      const childState = getStateListeners[route.key]?.();\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return { ...route, state: childState };\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return { ...state, routes };\n  }, [getState, getStateListeners]);\n\n  React.useEffect(() => {\n    return addKeyedListener?.('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n"]},"metadata":{},"sourceType":"script"}