{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=HeaderTitle;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _native=require(\"@react-navigation/native\");var _excluded=[\"tintColor\",\"style\"];function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function HeaderTitle(_ref){var tintColor=_ref.tintColor,style=_ref.style,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var _useTheme=(0,_native.useTheme)(),colors=_useTheme.colors;return React.createElement(_reactNative.Animated.Text,_extends({accessibilityRole:\"header\",\"aria-level\":\"1\",numberOfLines:1},rest,{style:[styles.title,{color:tintColor===undefined?colors.text:tintColor},style]}));}var styles=_reactNative.StyleSheet.create({title:_reactNative.Platform.select({ios:{fontSize:17,fontWeight:'600'},android:{fontSize:20,fontFamily:'sans-serif-medium',fontWeight:'normal'},default:{fontSize:18,fontWeight:'500'}})});","map":{"version":3,"sources":["HeaderTitle.tsx"],"names":["rest","colors","styles","color","tintColor","title","ios","fontSize","fontWeight","android","fontFamily","default"],"mappings":"wRAAA,oDACA,yCAQA,gD,qzCAQe,QAAA,YAAA,MAA2D,IAAtC,UAAsC,MAAtC,SAAsC,CAAtC,KAAsC,MAAtC,KAAsC,CAAfA,IAAe,uDACxE,cAAA,GAAA,gBAAA,GAAA,CAAQC,MAAR,WAAQA,MAAR,CAEA,MACE,MAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,iBAAiB,CADnB,QAAA,CAEE,aAFF,GAAA,CAGE,aAAa,CAAE,CAHjB,CAAA,CAAA,IAAA,CAAA,CAKE,KAAK,CAAE,CACLC,MAAM,CADD,KAAA,CAEL,CAAEC,KAAK,CAAEC,SAAS,GAATA,SAAAA,CAA0BH,MAAM,CAAhCG,IAAAA,CAAwCA,SAAjD,CAFK,CAAA,KAAA,CALT,CAAA,CAAA,CADF,CAaD,CAED,GAAMF,OAAM,CAAG,uBAAA,CAAA,MAAA,CAAkB,CAC/BG,KAAK,CAAE,qBAAA,CAAA,MAAA,CAAgB,CACrBC,GAAG,CAAE,CACHC,QAAQ,CADL,EAAA,CAEHC,UAAU,CAAE,KAFT,CADgB,CAKrBC,OAAO,CAAE,CACPF,QAAQ,CADD,EAAA,CAEPG,UAAU,CAFH,mBAAA,CAGPF,UAAU,CAAE,QAHL,CALY,CAUrBG,OAAO,CAAE,CACPJ,QAAQ,CADD,EAAA,CAEPC,UAAU,CAAE,KAFL,CAVY,CAAhB,CADwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Platform,\n  TextProps,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  children?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"script"}