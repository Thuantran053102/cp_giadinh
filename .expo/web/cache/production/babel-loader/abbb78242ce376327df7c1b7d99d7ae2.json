{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.Extrapolate=void 0;exports.default=interpolate;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _operators=require(\"../operators\");var _invariant=_interopRequireDefault(require(\"invariant\"));var _AnimatedNode=_interopRequireDefault(require(\"../core/AnimatedNode\"));var _AnimatedCond=require(\"../core/AnimatedCond\");var _AnimatedFunction=require(\"../core/AnimatedFunction\");function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}var interpolateInternalSingleProc=(0,_AnimatedFunction.createAnimatedFunction)(function(value,inS,inE,outS,outE){var progress=(0,_operators.divide)((0,_operators.sub)(value,inS),(0,_operators.sub)(inE,inS));var resultForNonZeroRange=(0,_operators.add)(outS,(0,_operators.multiply)(progress,(0,_operators.sub)(outE,outS)));var result=(0,_AnimatedCond.createAnimatedCond)((0,_operators.eq)(inS,inE),(0,_AnimatedCond.createAnimatedCond)((0,_operators.lessOrEq)(value,inS),outS,outE),resultForNonZeroRange);return result;});function interpolateInternalSingle(value,inputRange,outputRange,offset){var inS=inputRange[offset];var inE=inputRange[offset+1];var outS=outputRange[offset];var outE=outputRange[offset+1];return interpolateInternalSingleProc(value,inS,inE,outS,outE);}function interpolateInternal(value,inputRange,outputRange){var offset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;if(inputRange.length-offset===2){return interpolateInternalSingle(value,inputRange,outputRange,offset);}return(0,_AnimatedCond.createAnimatedCond)((0,_operators.lessThan)(value,inputRange[offset+1]),interpolateInternalSingle(value,inputRange,outputRange,offset),interpolateInternal(value,inputRange,outputRange,offset+1));}var Extrapolate={EXTEND:'extend',CLAMP:'clamp',IDENTITY:'identity'};exports.Extrapolate=Extrapolate;function checkNonDecreasing(name,arr){for(var i=1;i<arr.length;++i){if(arr[i]instanceof _AnimatedNode.default||arr[i-1]instanceof _AnimatedNode.default)continue;(0,_invariant.default)(arr[i]>=arr[i-1],'%s must be monotonically non-decreasing. (%s)',name,arr);}}function checkMinElements(name,arr){(0,_invariant.default)(arr.length>=2,'%s must have at least 2 elements. (%s)',name,arr);}function checkValidNumbers(name,arr){for(var i=0;i<arr.length;i++){if(arr[i]instanceof _AnimatedNode.default||typeof arr[i]!=='number')continue;(0,_invariant.default)(Number.isFinite(arr[i]),'%s cannot include %s. (%s)',name,arr[i],arr);}}function convertToRadians(outputRange){for(var _iterator=_createForOfIteratorHelperLoose(outputRange.entries()),_step;!(_step=_iterator()).done;){var _ref=_step.value;var _ref2=(0,_slicedToArray2.default)(_ref,2);var i=_ref2[0];var value=_ref2[1];if(typeof value==='string'&&value.endsWith('deg')){outputRange[i]=parseFloat(value)*(Math.PI/180);}else if(typeof value==='string'&&value.endsWith('rad')){outputRange[i]=parseFloat(value);}}}function interpolate(value,config){var inputRange=config.inputRange,outputRange=config.outputRange,_config$extrapolate=config.extrapolate,extrapolate=_config$extrapolate===void 0?Extrapolate.EXTEND:_config$extrapolate,extrapolateLeft=config.extrapolateLeft,extrapolateRight=config.extrapolateRight;checkMinElements('inputRange',inputRange);checkValidNumbers('inputRange',inputRange);checkMinElements('outputRange',outputRange);checkValidNumbers('outputRange',outputRange);checkNonDecreasing('inputRange',inputRange);(0,_invariant.default)(inputRange.length===outputRange.length,'inputRange and outputRange must be the same length.');convertToRadians(outputRange);var left=extrapolateLeft||extrapolate;var right=extrapolateRight||extrapolate;var output=interpolateInternal(value,inputRange,outputRange);if(left===Extrapolate.EXTEND){}else if(left===Extrapolate.CLAMP){output=(0,_AnimatedCond.createAnimatedCond)((0,_operators.lessThan)(value,inputRange[0]),outputRange[0],output);}else if(left===Extrapolate.IDENTITY){output=(0,_AnimatedCond.createAnimatedCond)((0,_operators.lessThan)(value,inputRange[0]),value,output);}if(right===Extrapolate.EXTEND){}else if(right===Extrapolate.CLAMP){output=(0,_AnimatedCond.createAnimatedCond)((0,_operators.greaterThan)(value,inputRange[inputRange.length-1]),outputRange[outputRange.length-1],output);}else if(right===Extrapolate.IDENTITY){output=(0,_AnimatedCond.createAnimatedCond)((0,_operators.greaterThan)(value,inputRange[inputRange.length-1]),value,output);}return output;}","map":{"version":3,"names":["interpolateInternalSingleProc","proc","value","inS","inE","outS","outE","progress","divide","sub","resultForNonZeroRange","add","multiply","result","cond","eq","lessOrEq","interpolateInternalSingle","inputRange","outputRange","offset","interpolateInternal","length","lessThan","Extrapolate","EXTEND","CLAMP","IDENTITY","checkNonDecreasing","name","arr","i","AnimatedNode","invariant","checkMinElements","checkValidNumbers","Number","isFinite","convertToRadians","entries","endsWith","parseFloat","Math","PI","interpolate","config","extrapolate","extrapolateLeft","extrapolateRight","left","right","output","greaterThan"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-reanimated/lib/reanimated1/derived/interpolate.js"],"sourcesContent":["import {\n  lessThan,\n  multiply,\n  sub,\n  add,\n  divide,\n  greaterThan,\n  lessOrEq,\n  eq,\n} from '../operators';\nimport invariant from 'invariant';\n\nimport AnimatedNode from '../core/AnimatedNode';\nimport { createAnimatedCond as cond } from '../core/AnimatedCond';\nimport { createAnimatedFunction as proc } from '../core/AnimatedFunction';\n\nconst interpolateInternalSingleProc = proc(function (\n  value,\n  inS,\n  inE,\n  outS,\n  outE\n) {\n  const progress = divide(sub(value, inS), sub(inE, inS));\n  // logic below was made in order to provide a compatibility witn an Animated API\n  const resultForNonZeroRange = add(outS, multiply(progress, sub(outE, outS)));\n  const result = cond(\n    eq(inS, inE),\n    cond(lessOrEq(value, inS), outS, outE),\n    resultForNonZeroRange\n  );\n  return result;\n});\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  const inS = inputRange[offset];\n  const inE = inputRange[offset + 1];\n  const outS = outputRange[offset];\n  const outE = outputRange[offset + 1];\n  return interpolateInternalSingleProc(value, inS, inE, outS, outE);\n}\n\nfunction interpolateInternal(value, inputRange, outputRange, offset = 0) {\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n  return cond(\n    lessThan(value, inputRange[offset + 1]),\n    interpolateInternalSingle(value, inputRange, outputRange, offset),\n    interpolateInternal(value, inputRange, outputRange, offset + 1)\n  );\n}\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity',\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (let i = 1; i < arr.length; ++i) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode)\n      continue;\n    invariant(\n      arr[i] >= arr[i - 1],\n      '%s must be monotonically non-decreasing. (%s)',\n      name,\n      arr\n    );\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(\n    arr.length >= 2,\n    '%s must have at least 2 elements. (%s)',\n    name,\n    arr\n  );\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || typeof arr[i] !== 'number') continue;\n    invariant(\n      Number.isFinite(arr[i]),\n      '%s cannot include %s. (%s)',\n      name,\n      arr[i],\n      arr\n    );\n  }\n}\n\nfunction convertToRadians(outputRange) {\n  for (const [i, value] of outputRange.entries()) {\n    if (typeof value === 'string' && value.endsWith('deg')) {\n      outputRange[i] = parseFloat(value) * (Math.PI / 180);\n    } else if (typeof value === 'string' && value.endsWith('rad')) {\n      outputRange[i] = parseFloat(value);\n    }\n  }\n}\n\nexport default function interpolate(value, config) {\n  const {\n    inputRange,\n    outputRange,\n    extrapolate = Extrapolate.EXTEND,\n    extrapolateLeft,\n    extrapolateRight,\n  } = config;\n\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(\n    inputRange.length === outputRange.length,\n    'inputRange and outputRange must be the same length.'\n  );\n\n  convertToRadians(outputRange);\n  const left = extrapolateLeft || extrapolate;\n  const right = extrapolateRight || extrapolate;\n  let output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.EXTEND) {\n  } else if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.EXTEND) {\n  } else if (right === Extrapolate.CLAMP) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      outputRange[outputRange.length - 1],\n      output\n    );\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      value,\n      output\n    );\n  }\n\n  return output;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}