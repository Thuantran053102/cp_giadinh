{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _native=require(\"@react-navigation/native\");var _reactNativeScreens=require(\"react-native-screens\");var _SafeAreaProviderCompat=_interopRequireWildcard(require(\"./SafeAreaProviderCompat\"));var _ResourceSavingScene=_interopRequireDefault(require(\"./ResourceSavingScene\"));var _BottomTabBar=_interopRequireWildcard(require(\"./BottomTabBar\"));var _BottomTabBarHeightCallbackContext=_interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));var _BottomTabBarHeightContext=_interopRequireDefault(require(\"../utils/BottomTabBarHeightContext\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function SceneContent(_ref){var isFocused=_ref.isFocused,children=_ref.children,style=_ref.style;var _useTheme=(0,_native.useTheme)(),colors=_useTheme.colors;return React.createElement(_reactNative.View,{accessibilityElementsHidden:!isFocused,importantForAccessibility:isFocused?'auto':'no-hide-descendants',style:[styles.content,{backgroundColor:colors.background},style]},children);}var BottomTabView=function(_React$Component){(0,_inherits2.default)(BottomTabView,_React$Component);var _super=_createSuper(BottomTabView);function BottomTabView(_props){var _this;(0,_classCallCheck2.default)(this,BottomTabView);_this=_super.call(this,_props);_defineProperty((0,_assertThisInitialized2.default)(_this),\"renderTabBar\",function(){var _this$props=_this.props,_this$props$tabBar=_this$props.tabBar,tabBar=_this$props$tabBar===void 0?function(props){return React.createElement(_BottomTabBar.default,props);}:_this$props$tabBar,tabBarOptions=_this$props.tabBarOptions,state=_this$props.state,navigation=_this$props.navigation,descriptors=_this$props.descriptors;return tabBar((0,_extends2.default)({},tabBarOptions,{state:state,descriptors:descriptors,navigation:navigation}));});_defineProperty((0,_assertThisInitialized2.default)(_this),\"handleTabBarHeightChange\",function(height){_this.setState(function(state){if(state.tabBarHeight!==height){return{tabBarHeight:height};}return null;});});var _this$props2=_this.props,_state=_this$props2.state,_tabBarOptions=_this$props2.tabBarOptions;var dimensions=_reactNative.Dimensions.get('window');var tabBarHeight=(0,_BottomTabBar.getTabBarHeight)({state:_state,dimensions:dimensions,layout:{width:dimensions.width,height:0},insets:_SafeAreaProviderCompat.initialSafeAreaInsets,adaptive:_tabBarOptions===null||_tabBarOptions===void 0?void 0:_tabBarOptions.adaptive,labelPosition:_tabBarOptions===null||_tabBarOptions===void 0?void 0:_tabBarOptions.labelPosition,tabStyle:_tabBarOptions===null||_tabBarOptions===void 0?void 0:_tabBarOptions.tabStyle,style:_tabBarOptions===null||_tabBarOptions===void 0?void 0:_tabBarOptions.style});_this.state={loaded:[_state.routes[_state.index].key],tabBarHeight:tabBarHeight};return _this;}(0,_createClass2.default)(BottomTabView,[{key:\"render\",value:function render(){var _this$props3=this.props,state=_this$props3.state,descriptors=_this$props3.descriptors,navigation=_this$props3.navigation,lazy=_this$props3.lazy,_this$props3$detachIn=_this$props3.detachInactiveScreens,detachInactiveScreens=_this$props3$detachIn===void 0?true:_this$props3$detachIn,sceneContainerStyle=_this$props3.sceneContainerStyle;var routes=state.routes;var _this$state=this.state,loaded=_this$state.loaded,tabBarHeight=_this$state.tabBarHeight;var isScreensEnabled=(_reactNativeScreens.screensEnabled===null||_reactNativeScreens.screensEnabled===void 0?void 0:(0,_reactNativeScreens.screensEnabled)())&&detachInactiveScreens;return React.createElement(_native.NavigationHelpersContext.Provider,{value:navigation},React.createElement(_SafeAreaProviderCompat.default,null,React.createElement(_reactNativeScreens.ScreenContainer,{enabled:isScreensEnabled,style:styles.container},routes.map(function(route,index){var descriptor=descriptors[route.key];var unmountOnBlur=descriptor.options.unmountOnBlur;var isFocused=state.index===index;if(unmountOnBlur&&!isFocused){return null;}if(lazy&&!loaded.includes(route.key)&&!isFocused){return null;}return React.createElement(_ResourceSavingScene.default,{key:route.key,style:_reactNative.StyleSheet.absoluteFill,isVisible:isFocused,enabled:isScreensEnabled},React.createElement(SceneContent,{isFocused:isFocused,style:sceneContainerStyle},React.createElement(_BottomTabBarHeightContext.default.Provider,{value:tabBarHeight},descriptor.render())));})),React.createElement(_BottomTabBarHeightCallbackContext.default.Provider,{value:this.handleTabBarHeightChange},this.renderTabBar())));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){var focusedRouteKey=nextProps.state.routes[nextProps.state.index].key;return{loaded:prevState.loaded.includes(focusedRouteKey)?prevState.loaded:[].concat((0,_toConsumableArray2.default)(prevState.loaded),[focusedRouteKey])};}}]);return BottomTabView;}(React.Component);exports.default=BottomTabView;_defineProperty(BottomTabView,\"defaultProps\",{lazy:true});var styles=_reactNative.StyleSheet.create({container:{flex:1,overflow:'hidden'},content:{flex:1}});","map":{"version":3,"sources":["BottomTabView.tsx"],"names":["style","colors","isFocused","styles","backgroundColor","background","BottomTabView","React","lazy","focusedRouteKey","nextProps","loaded","prevState","constructor","state","tabBarOptions","dimensions","Dimensions","tabBarHeight","getTabBarHeight","layout","width","height","insets","adaptive","labelPosition","tabStyle","tabBar","props","descriptors","navigation","render","detachInactiveScreens","sceneContainerStyle","routes","isScreensEnabled","container","descriptor","route","unmountOnBlur","StyleSheet","handleTabBarHeightChange","flex","overflow","content"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  NavigationHelpersContext,\n  ParamListBase,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport { ScreenContainer, screensEnabled } from 'react-native-screens';\n\nimport SafeAreaProviderCompat, {\n  initialSafeAreaInsets,\n} from './SafeAreaProviderCompat';\nimport ResourceSavingScene from './ResourceSavingScene';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabDescriptorMap,\n  BottomTabNavigationHelpers,\n  BottomTabBarProps,\n} from '../types';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\ntype State = {\n  loaded: string[];\n  tabBarHeight: number;\n};\n\nfunction SceneContent({\n  isFocused,\n  children,\n  style,\n}: {\n  isFocused: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      accessibilityElementsHidden={!isFocused}\n      importantForAccessibility={isFocused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.content, { backgroundColor: colors.background }, style]}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport default class BottomTabView extends React.Component<Props, State> {\n  static defaultProps = {\n    lazy: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const focusedRouteKey = nextProps.state.routes[nextProps.state.index].key;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(focusedRouteKey)\n        ? prevState.loaded\n        : [...prevState.loaded, focusedRouteKey],\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { state, tabBarOptions } = this.props;\n\n    const dimensions = Dimensions.get('window');\n    const tabBarHeight = getTabBarHeight({\n      state,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: initialSafeAreaInsets,\n      adaptive: tabBarOptions?.adaptive,\n      labelPosition: tabBarOptions?.labelPosition,\n      tabStyle: tabBarOptions?.tabStyle,\n      style: tabBarOptions?.style,\n    });\n\n    this.state = {\n      loaded: [state.routes[state.index].key],\n      tabBarHeight: tabBarHeight,\n    };\n  }\n\n  private renderTabBar = () => {\n    const {\n      tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n      tabBarOptions,\n      state,\n      navigation,\n      descriptors,\n    } = this.props;\n    return tabBar({\n      ...tabBarOptions,\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation,\n    });\n  };\n\n  private handleTabBarHeightChange = (height: number) => {\n    this.setState((state) => {\n      if (state.tabBarHeight !== height) {\n        return { tabBarHeight: height };\n      }\n\n      return null;\n    });\n  };\n\n  render() {\n    const {\n      state,\n      descriptors,\n      navigation,\n      lazy,\n      detachInactiveScreens = true,\n      sceneContainerStyle,\n    } = this.props;\n    const { routes } = state;\n    const { loaded, tabBarHeight } = this.state;\n    const isScreensEnabled = screensEnabled?.() && detachInactiveScreens;\n\n    return (\n      <NavigationHelpersContext.Provider value={navigation}>\n        <SafeAreaProviderCompat>\n          <ScreenContainer\n            // @ts-ignore\n            enabled={isScreensEnabled}\n            style={styles.container}\n          >\n            {routes.map((route, index) => {\n              const descriptor = descriptors[route.key];\n              const { unmountOnBlur } = descriptor.options;\n              const isFocused = state.index === index;\n\n              if (unmountOnBlur && !isFocused) {\n                return null;\n              }\n\n              if (lazy && !loaded.includes(route.key) && !isFocused) {\n                // Don't render a screen if we've never navigated to it\n                return null;\n              }\n\n              return (\n                <ResourceSavingScene\n                  key={route.key}\n                  style={StyleSheet.absoluteFill}\n                  isVisible={isFocused}\n                  enabled={isScreensEnabled}\n                >\n                  <SceneContent\n                    isFocused={isFocused}\n                    style={sceneContainerStyle}\n                  >\n                    <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                      {descriptor.render()}\n                    </BottomTabBarHeightContext.Provider>\n                  </SceneContent>\n                </ResourceSavingScene>\n              );\n            })}\n          </ScreenContainer>\n          <BottomTabBarHeightCallbackContext.Provider\n            value={this.handleTabBarHeightChange}\n          >\n            {this.renderTabBar()}\n          </BottomTabBarHeightCallbackContext.Provider>\n        </SafeAreaProviderCompat>\n      </NavigationHelpersContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}