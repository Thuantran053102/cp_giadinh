{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.LinearGradient=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _NativeLinearGradient=_interopRequireDefault(require(\"./NativeLinearGradient\"));var _excluded=[\"colors\",\"locations\",\"start\",\"end\"];function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var LinearGradient=function(_React$Component){(0,_inherits2.default)(LinearGradient,_React$Component);var _super=_createSuper(LinearGradient);function LinearGradient(){(0,_classCallCheck2.default)(this,LinearGradient);return _super.apply(this,arguments);}(0,_createClass2.default)(LinearGradient,[{key:\"render\",value:function render(){var _this$props=this.props,colors=_this$props.colors,locations=_this$props.locations,start=_this$props.start,end=_this$props.end,props=(0,_objectWithoutProperties2.default)(_this$props,_excluded);var resolvedLocations=locations;if(locations&&colors.length!==locations.length){console.warn('LinearGradient colors and locations props should be arrays of the same length');resolvedLocations=locations.slice(0,colors.length);}return React.createElement(_NativeLinearGradient.default,(0,_extends2.default)({},props,{colors:_reactNative.Platform.select({web:colors,default:colors.map(_reactNative.processColor)}),locations:resolvedLocations,startPoint:_normalizePoint(start),endPoint:_normalizePoint(end)}));}}]);return LinearGradient;}(React.Component);exports.LinearGradient=LinearGradient;function _normalizePoint(point){if(!point){return undefined;}if(Array.isArray(point)&&point.length!==2){console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');return undefined;}return Array.isArray(point)?point:[point.x,point.y];}","map":{"version":3,"sources":["../src/LinearGradient.tsx"],"names":[],"mappings":"o0BAAA,oDACA,yCAEA,oF,wwDA8Da,e,2SACX,iBAAM,CACJ,gBAAoD,KAAK,KAAzD,CAAQ,MAAR,aAAQ,MAAR,CAAgB,SAAhB,aAAgB,SAAhB,CAA2B,KAA3B,aAA2B,KAA3B,CAAkC,GAAlC,aAAkC,GAAlC,CAA0C,KAA1C,8DACA,GAAI,kBAAiB,CAAG,SAAxB,CACA,GAAI,SAAS,EAAI,MAAM,CAAC,MAAP,GAAkB,SAAS,CAAC,MAA7C,CAAqD,CACnD,OAAO,CAAC,IAAR,CAAa,+EAAb,EACA,iBAAiB,CAAG,SAAS,CAAC,KAAV,CAAgB,CAAhB,CAAmB,MAAM,CAAC,MAA1B,CAApB,CACD,CAED,MACE,MAAA,CAAA,aAAA,CAAC,6BAAD,0BACM,KADN,EAEE,MAAM,CAAE,qBAAA,CAAS,MAAT,CAAgB,CACtB,GAAG,CAAE,MADiB,CAEtB,OAAO,CAAE,MAAM,CAAC,GAAP,CAAW,yBAAX,CAFa,CAAhB,CAFV,CAME,SAAS,CAAE,iBANb,CAOE,UAAU,CAAE,eAAe,CAAC,KAAD,CAP7B,CAQE,QAAQ,CAAE,eAAe,CAAC,GAAD,CAR3B,GADF,CAYD,C,4BArBiC,KAAK,CAAC,S,wCAwB1C,QAAS,gBAAT,CACE,KADF,CAC+C,CAE7C,GAAI,CAAC,KAAL,CAAY,CACV,MAAO,UAAP,CACD,CAED,GAAI,KAAK,CAAC,OAAN,CAAc,KAAd,GAAwB,KAAK,CAAC,MAAN,GAAiB,CAA7C,CAAgD,CAC9C,OAAO,CAAC,IAAR,CAAa,8EAAb,EACA,MAAO,UAAP,CACD,CAED,MAAO,MAAK,CAAC,OAAN,CAAc,KAAd,EAAuB,KAAvB,CAA+B,CAAC,KAAK,CAAC,CAAP,CAAU,KAAK,CAAC,CAAhB,CAAtC,CACD","sourcesContent":["import * as React from 'react';\nimport { Platform, processColor, ViewProps } from 'react-native';\n\nimport NativeLinearGradient from './NativeLinearGradient';\nimport { NativeLinearGradientPoint } from './NativeLinearGradient.types';\n\n// @needsAudit\n/**\n * An object `{ x: number; y: number }` or array `[x, y]` that represents the point\n * at which the gradient starts or ends, as a fraction of the overall size of the gradient ranging\n * from `0` to `1`, inclusive.\n */\nexport type LinearGradientPoint =\n  | {\n      /**\n       * A number ranging from `0` to `1`, representing the position of gradient transformation.\n       */\n      x: number;\n      /**\n       * A number ranging from `0` to `1`, representing the position of gradient transformation.\n       */\n      y: number;\n    }\n  | NativeLinearGradientPoint;\n\n// @needsAudit\nexport type LinearGradientProps = ViewProps & {\n  /**\n   * An array of colors that represent stops in the gradient. At least two colors are required\n   * (for a single-color background, use the `style.backgroundColor` prop on a `View` component).\n   */\n  colors: string[];\n  /**\n   * An array that contains `number`s ranging from `0` to `1`, inclusive, and is the same length as the `colors` property.\n   * Each number indicates a color-stop location where each respective color should be located.\n   * If not specified, the colors will be distributed evenly across the gradient.\n   *\n   * For example, `[0.5, 0.8]` would render:\n   * - the first color, solid, from the beginning of the gradient view to 50% through (the middle);\n   * - a gradient from the first color to the second from the 50% point to the 80% point; and\n   * - the second color, solid, from the 80% point to the end of the gradient view.\n   *\n   * > The color-stop locations must be ascending from least to greatest.\n   * @default []\n   */\n  locations?: number[] | null;\n  /**\n   * For example, `{ x: 0.1, y: 0.2 }` means that the gradient will start `10%` from the left and `20%` from the top.\n   *\n   * **On web**, this only changes the angle of the gradient because CSS gradients don't support changing the starting position.\n   * @default { x: 0.5, y: 0.0 }\n   */\n  start?: LinearGradientPoint | null;\n  /**\n   * For example, `{ x: 0.1, y: 0.2 }` means that the gradient will end `10%` from the left and `20%` from the bottom.\n   *\n   * **On web**, this only changes the angle of the gradient because CSS gradients don't support changing the end position.\n   * @default { x: 0.5, y: 1.0 }\n   */\n  end?: LinearGradientPoint | null;\n};\n\n/**\n * Renders a native view that transitions between multiple colors in a linear direction.\n */\nexport class LinearGradient extends React.Component<LinearGradientProps> {\n  render() {\n    const { colors, locations, start, end, ...props } = this.props;\n    let resolvedLocations = locations;\n    if (locations && colors.length !== locations.length) {\n      console.warn('LinearGradient colors and locations props should be arrays of the same length');\n      resolvedLocations = locations.slice(0, colors.length);\n    }\n\n    return (\n      <NativeLinearGradient\n        {...props}\n        colors={Platform.select({\n          web: colors as any,\n          default: colors.map(processColor),\n        })}\n        locations={resolvedLocations}\n        startPoint={_normalizePoint(start)}\n        endPoint={_normalizePoint(end)}\n      />\n    );\n  }\n}\n\nfunction _normalizePoint(\n  point: LinearGradientPoint | null | undefined\n): NativeLinearGradientPoint | undefined {\n  if (!point) {\n    return undefined;\n  }\n\n  if (Array.isArray(point) && point.length !== 2) {\n    console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');\n    return undefined;\n  }\n\n  return Array.isArray(point) ? point : [point.x, point.y];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}