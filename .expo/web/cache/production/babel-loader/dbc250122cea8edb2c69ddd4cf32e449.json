{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=color;var _reactNative=require(\"react-native\");var _base=require(\"../base\");var _AnimatedNode=_interopRequireDefault(require(\"../core/AnimatedNode\"));var procColor=(0,_base.proc)(function(r,g,b,a){var color=(0,_base.add)((0,_base.multiply)(a,1<<24),(0,_base.multiply)((0,_base.round)(r),1<<16),(0,_base.multiply)((0,_base.round)(g),1<<8),(0,_base.round)(b));if(_reactNative.Platform.OS==='android'){return(0,_base.cond)((0,_base.lessThan)(color,1<<31>>>0),color,(0,_base.sub)(color,Math.pow(2,32)));}return color;});function color(r,g,b){var a=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;if(_reactNative.Platform.OS==='web'){return(0,_base.concat)('rgba(',r,',',g,',',b,',',a,')');}if(a instanceof _AnimatedNode.default){a=(0,_base.round)((0,_base.multiply)(a,255));}else{a=Math.round(a*255);}return procColor(r,g,b,a);}","map":{"version":3,"names":["procColor","proc","r","g","b","a","color","add","multiply","round","Platform","OS","cond","lessThan","sub","Math","pow","concat","AnimatedNode"],"sources":["D:/React_Native/SourceCode_VPM_Swine/node_modules/react-native-reanimated/lib/reanimated1/derived/color.js"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport {\n  add,\n  cond,\n  concat,\n  lessThan,\n  multiply,\n  round,\n  sub,\n  proc,\n} from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\n\nconst procColor = proc(function (r, g, b, a) {\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(round(r), 1 << 16),\n    multiply(round(g), 1 << 8),\n    round(b)\n  );\n\n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n});\n\nexport default function color(r, g, b, a = 1) {\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}\n"],"mappings":"kKAAA,yCAEA,6BAUA,0EAEA,GAAMA,UAAS,CAAG,GAAAC,UAAA,EAAK,SAAUC,CAAV,CAAaC,CAAb,CAAgBC,CAAhB,CAAmBC,CAAnB,CAAsB,CAC3C,GAAMC,MAAK,CAAG,GAAAC,SAAA,EACZ,GAAAC,cAAA,EAASH,CAAT,CAAY,GAAK,EAAjB,CADY,CAEZ,GAAAG,cAAA,EAAS,GAAAC,WAAA,EAAMP,CAAN,CAAT,CAAmB,GAAK,EAAxB,CAFY,CAGZ,GAAAM,cAAA,EAAS,GAAAC,WAAA,EAAMN,CAAN,CAAT,CAAmB,GAAK,CAAxB,CAHY,CAIZ,GAAAM,WAAA,EAAML,CAAN,CAJY,CAAd,CAOA,GAAIM,qBAAA,CAASC,EAAT,GAAgB,SAApB,CAA+B,CAE7B,MAAO,GAAAC,UAAA,EACL,GAAAC,cAAA,EAASP,KAAT,CAAiB,GAAK,EAAN,GAAc,CAA9B,CADK,CAELA,KAFK,CAGL,GAAAQ,SAAA,EAAIR,KAAJ,CAAWS,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,EAAZ,CAAX,CAHK,CAAP,CAKD,CACD,MAAOV,MAAP,CACD,CAjBiB,CAAlB,CAmBe,QAASA,MAAT,CAAeJ,CAAf,CAAkBC,CAAlB,CAAqBC,CAArB,CAA+B,IAAPC,EAAO,2DAAH,CAAG,CAC5C,GAAIK,qBAAA,CAASC,EAAT,GAAgB,KAApB,CAA2B,CAEzB,MAAO,GAAAM,YAAA,EAAO,OAAP,CAAgBf,CAAhB,CAAmB,GAAnB,CAAwBC,CAAxB,CAA2B,GAA3B,CAAgCC,CAAhC,CAAmC,GAAnC,CAAwCC,CAAxC,CAA2C,GAA3C,CAAP,CACD,CAED,GAAIA,CAAC,WAAYa,sBAAjB,CAA+B,CAC7Bb,CAAC,CAAG,GAAAI,WAAA,EAAM,GAAAD,cAAA,EAASH,CAAT,CAAY,GAAZ,CAAN,CAAJ,CACD,CAFD,IAEO,CACLA,CAAC,CAAGU,IAAI,CAACN,KAAL,CAAWJ,CAAC,CAAG,GAAf,CAAJ,CACD,CAED,MAAOL,UAAS,CAACE,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAUC,CAAV,CAAhB,CACD"},"metadata":{},"sourceType":"script"}