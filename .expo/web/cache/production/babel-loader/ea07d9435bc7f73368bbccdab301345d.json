{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useLinkTo;var React=_interopRequireWildcard(require(\"react\"));var _core=require(\"@react-navigation/core\");var _LinkingContext=_interopRequireDefault(require(\"./LinkingContext\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function useLinkTo(){var navigation=React.useContext(_core.NavigationContext);var linking=React.useContext(_LinkingContext.default);var linkTo=React.useCallback(function(path){if(!path.startsWith('/')){throw new Error(\"The path must start with '/' (\".concat(path,\").\"));}if(navigation===undefined){throw new Error(\"Couldn't find a navigation object. Is your component inside a screen in a navigator?\");}var options=linking.options;var state=options!==null&&options!==void 0&&options.getStateFromPath?options.getStateFromPath(path,options.config):(0,_core.getStateFromPath)(path,options===null||options===void 0?void 0:options.config);if(state){var root=navigation;var current;while(current=root.getParent()){root=current;}var action=(0,_core.getActionFromState)(state,options===null||options===void 0?void 0:options.config);if(action!==undefined){root.dispatch(action);}else{root.reset(state);}}else{throw new Error('Failed to parse the path to a navigation state.');}},[linking,navigation]);return linkTo;}","map":{"version":3,"sources":["useLinkTo.tsx"],"names":["navigation","React","linking","linkTo","path","options","state","getStateFromPath","root","current","action","getActionFromState"],"mappings":"sKAAA,oDACA,4CAKA,wE,0/BAEe,QAAA,UAAA,EAAqB,CAClC,GAAMA,WAAU,CAAGC,KAAK,CAALA,UAAAA,CAAnB,uBAAmBA,CAAnB,CACA,GAAMC,QAAO,CAAGD,KAAK,CAALA,UAAAA,CAAhB,uBAAgBA,CAAhB,CAEA,GAAME,OAAM,CAAG,KAAK,CAAL,WAAA,CACZC,SAAAA,IAAD,CAAkB,CAChB,GAAI,CAACA,IAAI,CAAJA,UAAAA,CAAL,GAAKA,CAAL,CAA2B,CACzB,KAAM,IAAA,MAAA,CAAA,iCAAA,MAAA,CAAA,IAAA,CAAN,IAAM,CAAA,CAAN,CACD,CAED,GAAIJ,UAAU,GAAd,SAAA,CAA8B,CAC5B,KAAM,IAAA,MAAA,CAAN,sFAAM,CAAN,CAGD,CAED,GAAQK,QAAR,CAAA,OAAA,CAAQA,OAAR,CAEA,GAAMC,MAAK,CAAGD,OAAO,GAAPA,IAAAA,EAAAA,OAAO,GAAA,IAAPA,EAAAA,EAAAA,OAAO,CAAPA,gBAAAA,CACVA,OAAO,CAAPA,gBAAAA,CAAAA,IAAAA,CAA+BA,OAAO,CAD5BA,MACVA,CADUA,CAEVE,GAAAA,sBAAAA,EAAgB,IAAhBA,CAAuBF,OAAP,GAAA,IAAOA,EAAAA,OAAP,GAAA,IAAA,EAAOA,CAAP,IAAA,EAAOA,CAAAA,OAAO,CAFlC,MAEIE,CAFJ,CAIA,GAAA,KAAA,CAAW,CACT,GAAIC,KAAI,CAAR,UAAA,CACA,GAFS,QAET,CAGA,MAAQC,OAAO,CAAGD,IAAI,CAAtB,SAAkBA,EAAlB,CAAqC,CACnCA,IAAI,CAAJA,OAAAA,CACD,CAED,GAAME,OAAM,CAAGC,GAAAA,wBAAAA,EAAkB,KAAlBA,CAA0BN,OAAR,GAAA,IAAQA,EAAAA,OAAR,GAAA,IAAA,EAAQA,CAAR,IAAA,EAAQA,CAAAA,OAAO,CAAhD,MAAeM,CAAf,CAEA,GAAID,MAAM,GAAV,SAAA,CAA0B,CACxBF,IAAI,CAAJA,QAAAA,CAAAA,MAAAA,EADF,CAAA,IAEO,CACLA,IAAI,CAAJA,KAAAA,CAAAA,KAAAA,EACD,CAfH,CAAA,IAgBO,CACL,KAAM,IAAA,MAAA,CAAN,iDAAM,CAAN,CACD,CApCU,CAAA,CAsCb,CAAA,OAAA,CAtCF,UAsCE,CAtCa,CAAf,CAyCA,MAAA,OAAA,CACD","sourcesContent":["import * as React from 'react';\nimport {\n  getStateFromPath,\n  getActionFromState,\n  NavigationContext,\n} from '@react-navigation/core';\nimport LinkingContext from './LinkingContext';\n\nexport default function useLinkTo() {\n  const navigation = React.useContext(NavigationContext);\n  const linking = React.useContext(LinkingContext);\n\n  const linkTo = React.useCallback(\n    (path: string) => {\n      if (!path.startsWith('/')) {\n        throw new Error(`The path must start with '/' (${path}).`);\n      }\n\n      if (navigation === undefined) {\n        throw new Error(\n          \"Couldn't find a navigation object. Is your component inside a screen in a navigator?\"\n        );\n      }\n\n      const { options } = linking;\n\n      const state = options?.getStateFromPath\n        ? options.getStateFromPath(path, options.config)\n        : getStateFromPath(path, options?.config);\n\n      if (state) {\n        let root = navigation;\n        let current;\n\n        // Traverse up to get the root navigation\n        while ((current = root.getParent())) {\n          root = current;\n        }\n\n        const action = getActionFromState(state, options?.config);\n\n        if (action !== undefined) {\n          root.dispatch(action);\n        } else {\n          root.reset(state);\n        }\n      } else {\n        throw new Error('Failed to parse the path to a navigation state.');\n      }\n    },\n    [linking, navigation]\n  );\n\n  return linkTo;\n}\n"]},"metadata":{},"sourceType":"script"}