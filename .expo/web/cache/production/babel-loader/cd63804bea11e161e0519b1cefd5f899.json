{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useKeyedChildListeners;var React=_interopRequireWildcard(require(\"react\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function useKeyedChildListeners(){var _React$useRef=React.useRef({getState:{},beforeRemove:{}}),keyedListeners=_React$useRef.current;var addKeyedListener=React.useCallback(function(type,key,listener){keyedListeners[type][key]=listener;return function(){keyedListeners[type][key]=undefined;};},[keyedListeners]);return{keyedListeners:keyedListeners,addKeyedListener:addKeyedListener};}","map":{"version":3,"sources":["useKeyedChildListeners.tsx"],"names":["current","keyedListeners","getState","beforeRemove","addKeyedListener"],"mappings":"gGAAA,oD,0/BAOe,QAAA,uBAAA,EAAkC,CAC/C,kBAAoC,KAAK,CAAL,MAAA,CAOlC,CACAE,QAAQ,CADR,EAAA,CAEAC,YAAY,CAAE,EAFd,CAPkC,CAApC,CAAiBF,cAAjB,eAAQD,OAAR,CAYA,GAAMI,iBAAgB,CAAG,KAAK,CAAL,WAAA,CACvB,SAAA,IAAA,CAAA,GAAA,CAAA,QAAA,CAIK,CAEHH,cAAc,CAAdA,IAAc,CAAdA,CAAAA,GAAAA,EAAAA,QAAAA,CAEA,MAAO,WAAM,CAEXA,cAAc,CAAdA,IAAc,CAAdA,CAAAA,GAAAA,EAAAA,SAAAA,CAFF,CAAA,CATqB,CAAA,CAcvB,CAdF,cAcE,CAduB,CAAzB,CAiBA,MAAO,CACLA,cADK,CACLA,cADK,CAELG,gBAAAA,CAAAA,gBAFK,CAAP,CAID","sourcesContent":["import * as React from 'react';\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<\n    {\n      [K in keyof KeyedListenerMap]: Record<\n        string,\n        KeyedListenerMap[K] | undefined\n      >;\n    }\n  >({\n    getState: {},\n    beforeRemove: {},\n  });\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      // @ts-expect-error: listener should be correct type according to `type`\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        // @ts-expect-error: listener should be correct type according to `type`\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}