{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useCardAnimation;var React=_interopRequireWildcard(require(\"react\"));var _CardAnimationContext=_interopRequireDefault(require(\"./CardAnimationContext\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function useCardAnimation(){var animation=React.useContext(_CardAnimationContext.default);if(animation===undefined){throw new Error(\"Couldn't find values for card animation. Are you inside a screen in Stack?\");}return animation;}","map":{"version":3,"sources":["useCardAnimation.tsx"],"names":["animation","React"],"mappings":"6KAAA,oDACA,oF,0/BAEe,QAAA,iBAAA,EAA4B,CACzC,GAAMA,UAAS,CAAGC,KAAK,CAALA,UAAAA,CAAlB,6BAAkBA,CAAlB,CAEA,GAAID,SAAS,GAAb,SAAA,CAA6B,CAC3B,KAAM,IAAA,MAAA,CAAN,4EAAM,CAAN,CAGD,CAED,MAAA,UAAA,CACD","sourcesContent":["import * as React from 'react';\nimport CardAnimationContext from './CardAnimationContext';\n\nexport default function useCardAnimation() {\n  const animation = React.useContext(CardAnimationContext);\n\n  if (animation === undefined) {\n    throw new Error(\n      \"Couldn't find values for card animation. Are you inside a screen in Stack?\"\n    );\n  }\n\n  return animation;\n}\n"]},"metadata":{},"sourceType":"script"}