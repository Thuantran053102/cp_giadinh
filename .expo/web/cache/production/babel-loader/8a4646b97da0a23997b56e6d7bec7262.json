{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.TextInput=exports.Switch=exports.ScrollView=exports.FlatList=exports.DrawerLayoutAndroid=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _createNativeWrapper=_interopRequireDefault(require(\"../handlers/createNativeWrapper\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var ScrollView=(0,_createNativeWrapper.default)(_reactNative.ScrollView,{disallowInterruption:true});exports.ScrollView=ScrollView;var Switch=(0,_createNativeWrapper.default)(_reactNative.Switch,{shouldCancelWhenOutside:false,shouldActivateOnStart:true,disallowInterruption:true});exports.Switch=Switch;var TextInput=(0,_createNativeWrapper.default)(_reactNative.TextInput);exports.TextInput=TextInput;var DrawerLayoutAndroid=(0,_createNativeWrapper.default)(_reactNative.DrawerLayoutAndroid,{disallowInterruption:true});exports.DrawerLayoutAndroid=DrawerLayoutAndroid;DrawerLayoutAndroid.positions=_reactNative.DrawerLayoutAndroid.positions;var FlatList=React.forwardRef(function(props,ref){return React.createElement(_reactNative.FlatList,_extends({ref:ref},props,{renderScrollComponent:function renderScrollComponent(scrollProps){return React.createElement(ScrollView,scrollProps);}}));});exports.FlatList=FlatList;","map":{"version":3,"sources":["GestureComponents.web.tsx"],"names":["ScrollView","createNativeWrapper","disallowInterruption","Switch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","FlatList","ref","scrollProps"],"mappings":"oPAAA,oDACA,yCASA,4F,ixCAEO,GAAMA,WAAU,CAAGC,GAAAA,4BAAAA,EAAmB,uBAAnBA,CAAkC,CAC1DC,oBAAoB,CAAE,IADoC,CAAlCD,CAAnB,C,8BAIA,GAAME,OAAM,CAAGF,GAAAA,4BAAAA,EAAmB,mBAAnBA,CAA8B,CAClDG,uBAAuB,CAD2B,KAAA,CAElDC,qBAAqB,CAF6B,IAAA,CAGlDH,oBAAoB,CAAE,IAH4B,CAA9BD,CAAf,C,sBAKA,GAAMK,UAAS,CAAGL,GAAAA,4BAAAA,EAAlB,sBAAkBA,CAAlB,C,4BACA,GAAMM,oBAAmB,CAAGN,GAAAA,4BAAAA,EAAmB,gCAAnBA,CAA2C,CAC5EC,oBAAoB,CAAE,IADsD,CAA3CD,CAA5B,C,gDAIPM,mBAAmB,CAAnBA,SAAAA,CAAgCC,gCAAAA,CAAhCD,SAAAA,CAEO,GAAME,SAAQ,CAAG,KAAK,CAAL,UAAA,CACtB,SAAA,KAAA,CAAA,GAAA,QACE,MAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,QAAA,CAAA,CACE,GAAG,CAAEC,GADP,CAAA,CAAA,KAAA,CAAA,CAGE,qBAAqB,CAAGC,+BAAAA,WAAD,QAAiB,MAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,CAAjB,EAHzB,CAAA,CAAA,CADF,EADsB,CAAjB,C","sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"script"}