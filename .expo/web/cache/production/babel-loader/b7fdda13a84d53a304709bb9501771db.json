{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=DrawerContentScrollView;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _reactNativeSafeAreaContext=require(\"react-native-safe-area-context\");var _DrawerPositionContext=_interopRequireDefault(require(\"../utils/DrawerPositionContext\"));var _excluded=[\"contentContainerStyle\",\"style\",\"children\"];function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function DrawerContentScrollView(_ref){var contentContainerStyle=_ref.contentContainerStyle,style=_ref.style,children=_ref.children,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var drawerPosition=React.useContext(_DrawerPositionContext.default);var insets=(0,_reactNativeSafeAreaContext.useSafeArea)();return React.createElement(_reactNative.ScrollView,_extends({},rest,{contentContainerStyle:[{paddingTop:insets.top+4,paddingLeft:drawerPosition==='left'?insets.left:0,paddingRight:drawerPosition==='right'?insets.right:0},contentContainerStyle],style:[styles.container,style]}),children);}var styles=_reactNative.StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["DrawerContentScrollView.tsx"],"names":["rest","drawerPosition","React","insets","paddingTop","paddingLeft","paddingRight","styles","container","flex"],"mappings":"oSAAA,oDACA,yCACA,0EACA,6F,40CAMe,QAAA,wBAAA,MAKL,IALsC,sBAKtC,MALsC,qBAKtC,CALsC,KAKtC,MALsC,KAKtC,CALsC,QAKtC,MALsC,QAKtC,CADLA,IACK,uDACR,GAAMC,eAAc,CAAGC,KAAK,CAALA,UAAAA,CAAvB,8BAAuBA,CAAvB,CACA,GAAMC,OAAM,CAAZ,GAAA,uCAAA,GAAA,CAEA,MACE,MAAA,CAAA,aAAA,CAAA,uBAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,qBAAqB,CAAE,CACrB,CACEC,UAAU,CAAED,MAAM,CAANA,GAAAA,CADd,CAAA,CAEEE,WAAW,CAAEJ,cAAc,GAAdA,MAAAA,CAA4BE,MAAM,CAAlCF,IAAAA,CAFf,CAAA,CAGEK,YAAY,CAAEL,cAAc,GAAdA,OAAAA,CAA6BE,MAAM,CAAnCF,KAAAA,CAA4C,CAH5D,CADqB,CAFzB,qBAEyB,CAFzB,CAUE,KAAK,CAAE,CAACM,MAAM,CAAP,SAAA,CAAA,KAAA,CAVT,CAAA,CAAA,CADF,QACE,CADF,CAgBD,CAED,GAAMA,OAAM,CAAG,uBAAA,CAAA,MAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,IAAI,CAAE,CADG,CADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps } from 'react-native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nexport default function DrawerContentScrollView({\n  contentContainerStyle,\n  style,\n  children,\n  ...rest\n}: Props) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeArea();\n\n  return (\n    <ScrollView\n      {...rest}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n          paddingRight: drawerPosition === 'right' ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}